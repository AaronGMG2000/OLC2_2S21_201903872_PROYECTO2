
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftorleftandrightnnotleftigualdiferentemayormayor_igualmenormenor_igualleftsumarestaleftmuldivmoduloleftelevadorightUMENOSand cder char cizq coma decimal diferente div dospuntos elevado id igual igualT int mayor mayor_igual menor menor_igual modulo mul not or pder pizq ptcoma punto r_bool r_break r_char r_continue r_cos r_else r_elseif r_end r_false r_float r_float64 r_for r_function r_global r_if r_in r_int64 r_length r_local r_log r_log10 r_lowercase r_mutable r_nothing r_nothingT r_parse r_pop r_print r_println r_push r_return r_sin r_sqrt r_string r_stringT r_struct r_tan r_true r_trunc r_typeof r_uppercase r_while resta string sumainit   : instruccionesinstrucciones  : instrucciones instruccioninstrucciones  : instruccioninstruccion  : print ptcoma\n                    | println ptcoma\n                    | asignacion ptcoma\n                    | condicional r_end ptcoma\n                    | whilee r_end ptcoma\n                    | forr r_end ptcoma\n                    | struct ptcoma\n                    | funtionn r_end ptcoma\n                    | llamada ptcoma\n                    | array ptcoma\n                    | BREAKk ptcoma\n                    | RETURNN ptcoma\n                    | CONTINUEE ptcoma\n                    | GLOBAL ptcoma\n                    | LOCAL ptcoma\n                    | PUSHH ptcoma\n                    | POPP ptcoma\n                    | LENGHTT ptcomaPUSHH : r_push not pizq expresion coma expresion pderPOPP : r_pop not pizq expresion pderLENGHTT : r_length pizq expresion pderGLOBAL : r_global idGLOBAL : r_global id igualT expresionGLOBAL : r_global id igualT expresion dospuntos dospuntos tipoGLOBAL : r_global id igualT expresion dospuntos dospuntos idLOCAL : r_local idLOCAL : r_local id igualT expresionLOCAL : r_local id igualT expresion dospuntos dospuntos tipoLOCAL : r_local id igualT expresion dospuntos dospuntos idcondicional    : if r_else instruccionesif : r_if expresion instruccionesif : if r_elseif expresion instruccionescondicional    : ifBREAKk : r_breakCONTINUEE : r_continueRETURNN : r_returnRETURNN : r_return expresionwhilee : r_while expresion instruccionesforr : r_for id r_in expresion instruccionesasignacion : id igualT expresionasignacion : id igualT expresion dospuntos dospuntos tipoasignacion : id igualT expresion dospuntos dospuntos idarray : id number_array lista_id igualT expresionarray : id number_array igualT expresionasignacion : id lista_id igualT expresionlista_id : lista_id punto idlista_id : lista_id punto id number_arraylista_id : punto idlista_id : punto id number_arrayllamada : id pizq parametro_print pder llamada : id pizq pder funtionn : r_function id pizq pder instruccionesfuntionn : r_function id pizq parametros_function pder instruccionesparametros_function : parametros_function coma idparametros_function : parametros_function coma id dospuntos dospuntos tipoparametros_function : parametros_function coma id dospuntos dospuntos idparametros_function : idparametros_function : id dospuntos dospuntos tipoparametros_function : id dospuntos dospuntos idstruct : r_struct id parametros_struct r_endstruct : r_mutable r_struct id parametros_struct r_endparametros_struct : parametros_struct parametro_structparametros_struct : parametro_structparametro_struct : id ptcomaparametro_struct : id dospuntos dospuntos tipo ptcomaparametro_struct : id dospuntos dospuntos id ptcomaprint  : r_print pizq parametro_print pderprintln  : r_println pizq parametro_print pderprint  : r_print pizq pderprintln  : r_println pizq pderparametro_print  : parametro_print coma expresionparametro_print    : expresiontipo : r_int64\n            | r_float64\n            | r_stringT\n            | r_bool\n            | r_nothingT\n            | r_charexpresion : exp_structexp_struct : exp_struct punto idexp_struct : exp_struct punto id number_arrayexp_struct : idexp_struct : id number_arraynumber_array : cizq expresion cdernumber_array : number_array cizq expresion cderexpresion : cizq expresion_exp cderexpresion_exp : expresion_exp coma expresionexpresion_exp : expresionexpresion : id pizq parametro_print pderexpresion : r_parse pizq tipo coma expresion pder\n                 | r_trunc pizq tipo coma expresion pder\n                 expresion : r_length pizq expresion pderexpresion    : r_trunc pizq expresion pder\n                    | r_float pizq expresion pder\n                    | r_string pizq expresion pder\n                    | r_uppercase pizq expresion pder\n                    | r_lowercase pizq expresion pderexpresion : expresion dospuntos expresionexpresion : dospuntosexpresion : expresion suma expresion\n                 | expresion resta expresion\n                 | expresion mul expresion\n                 | expresion div expresion\n                 | expresion elevado expresion\n                 | expresion modulo expresion\n                 | expresion igual expresion\n                 | expresion diferente expresion\n                 | expresion mayor expresion\n                 | expresion menor expresion\n                 | expresion mayor_igual expresion\n                 | expresion menor_igual expresion\n                 | expresion and expresion\n                 | expresion or expresionexpresion    :   resta expresion %prec UMENOS\n                    |   not expresion %prec nnotexpresion    : intexpresion    : decimalexpresion    : charexpresion    : stringexpresion    : r_false\n                    | r_trueexpresion : r_nothingexpresion : pizq expresion pder'
    
_lr_action_items = {'r_print':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[22,22,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,22,22,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,22,-7,-8,-9,-11,22,22,22,-86,-117,-118,22,-87,22,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,22,22,-88,-84,-92,-96,-95,-97,-98,-99,-100,22,22,22,22,-93,-94,]),'r_println':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[23,23,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,23,23,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,23,-7,-8,-9,-11,23,23,23,-86,-117,-118,23,-87,23,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,23,23,-88,-84,-92,-96,-95,-97,-98,-99,-100,23,23,23,23,-93,-94,]),'id':([0,2,3,26,27,28,30,32,34,35,39,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,92,93,100,101,102,103,104,105,112,113,117,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,143,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,165,167,169,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,213,214,217,218,220,228,231,232,234,235,236,237,238,239,240,241,242,243,244,247,248,249,250,251,252,260,261,263,264,266,267,268,269,278,],[24,24,-3,72,91,92,94,72,96,97,72,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,72,72,72,72,119,72,24,72,24,-82,72,-85,72,-102,72,72,-119,-120,-121,-122,-123,-124,-125,155,158,72,24,-7,-8,-9,-11,72,171,72,72,24,24,24,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,194,72,-86,72,72,72,72,72,72,-117,-118,72,155,-66,155,219,72,72,72,72,24,72,72,72,-87,24,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,72,-126,24,-67,-65,155,24,254,-88,-84,-92,72,72,-96,-95,-97,-98,-99,-100,24,258,24,24,262,72,72,72,270,24,273,275,-93,-94,-69,-68,279,]),'r_while':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[26,26,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,26,26,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,26,-7,-8,-9,-11,26,26,26,-86,-117,-118,26,-87,26,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,26,26,-88,-84,-92,-96,-95,-97,-98,-99,-100,26,26,26,26,-93,-94,]),'r_for':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[27,27,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,27,27,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,27,-7,-8,-9,-11,27,27,27,-86,-117,-118,27,-87,27,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,27,27,-88,-84,-92,-96,-95,-97,-98,-99,-100,27,27,27,27,-93,-94,]),'r_struct':([0,2,3,29,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[28,28,-3,93,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,28,28,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,28,-7,-8,-9,-11,28,28,28,-86,-117,-118,28,-87,28,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,28,28,-88,-84,-92,-96,-95,-97,-98,-99,-100,28,28,28,28,-93,-94,]),'r_mutable':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[29,29,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,29,29,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,29,-7,-8,-9,-11,29,29,29,-86,-117,-118,29,-87,29,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,29,29,-88,-84,-92,-96,-95,-97,-98,-99,-100,29,29,29,29,-93,-94,]),'r_function':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[30,30,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,30,30,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,30,-7,-8,-9,-11,30,30,30,-86,-117,-118,30,-87,30,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,30,30,-88,-84,-92,-96,-95,-97,-98,-99,-100,30,30,30,30,-93,-94,]),'r_break':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[31,31,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,31,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,31,-7,-8,-9,-11,31,31,31,-86,-117,-118,31,-87,31,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,31,31,-88,-84,-92,-96,-95,-97,-98,-99,-100,31,31,31,31,-93,-94,]),'r_return':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[32,32,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,32,32,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,32,-7,-8,-9,-11,32,32,32,-86,-117,-118,32,-87,32,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,32,32,-88,-84,-92,-96,-95,-97,-98,-99,-100,32,32,32,32,-93,-94,]),'r_continue':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[33,33,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,33,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,33,-7,-8,-9,-11,33,33,33,-86,-117,-118,33,-87,33,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,33,33,-88,-84,-92,-96,-95,-97,-98,-99,-100,33,33,33,33,-93,-94,]),'r_global':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[34,34,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,34,34,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,34,-7,-8,-9,-11,34,34,34,-86,-117,-118,34,-87,34,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,34,34,-88,-84,-92,-96,-95,-97,-98,-99,-100,34,34,34,34,-93,-94,]),'r_local':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[35,35,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,35,35,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,35,-7,-8,-9,-11,35,35,35,-86,-117,-118,35,-87,35,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,35,35,-88,-84,-92,-96,-95,-97,-98,-99,-100,35,35,35,35,-93,-94,]),'r_push':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[36,36,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,36,36,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,36,-7,-8,-9,-11,36,36,36,-86,-117,-118,36,-87,36,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,36,36,-88,-84,-92,-96,-95,-97,-98,-99,-100,36,36,36,36,-93,-94,]),'r_pop':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[37,37,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,37,37,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,37,-7,-8,-9,-11,37,37,37,-86,-117,-118,37,-87,37,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,37,37,-88,-84,-92,-96,-95,-97,-98,-99,-100,37,37,37,37,-93,-94,]),'r_length':([0,2,3,26,32,39,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,100,101,102,103,104,105,112,117,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,143,146,147,148,149,150,151,152,153,154,160,161,162,163,165,167,169,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,213,220,231,232,234,235,236,237,238,239,240,241,242,243,247,248,250,251,252,261,266,267,],[38,38,-3,76,76,76,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,76,76,76,76,76,38,76,38,-82,76,-85,76,-102,76,76,-119,-120,-121,-122,-123,-124,-125,76,38,-7,-8,-9,-11,76,76,76,38,38,38,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-86,76,76,76,76,76,76,-117,-118,76,76,76,76,76,38,76,76,76,-87,38,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,76,-126,38,38,-88,-84,-92,76,76,-96,-95,-97,-98,-99,-100,38,38,38,76,76,76,38,-93,-94,]),'r_if':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,121,122,123,143,152,153,165,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,213,220,231,232,234,237,238,239,240,241,242,243,247,248,261,266,267,],[39,39,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,39,39,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,39,-7,-8,-9,-11,39,39,39,-86,-117,-118,39,-87,39,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,39,39,-88,-84,-92,-96,-95,-97,-98,-99,-100,39,39,39,39,-93,-94,]),'$end':([1,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,],[0,-1,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,]),'r_end':([3,7,8,9,11,25,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,121,123,156,157,165,178,214,217,218,243,247,261,268,269,],[-3,44,45,46,48,-36,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-33,-41,216,-66,-34,-35,-67,-65,245,-42,-55,-56,-69,-68,]),'r_else':([3,25,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,165,178,],[-3,67,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-34,-35,]),'r_elseif':([3,25,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,165,178,],[-3,68,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-34,-35,]),'ptcoma':([4,5,6,10,12,13,14,15,16,17,18,19,20,21,31,32,33,44,45,46,48,70,72,81,84,85,86,87,88,89,90,95,96,97,107,110,111,115,143,152,153,155,166,168,170,172,174,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,200,201,202,203,204,205,216,222,223,226,228,230,231,232,234,237,238,239,240,241,242,245,253,254,255,258,259,263,264,266,267,273,274,275,276,277,],[41,42,43,47,49,50,51,52,53,54,55,56,57,58,-37,-39,-38,102,103,104,105,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,-40,-25,-29,-72,-73,-43,-54,-86,-117,-118,214,-70,-71,-48,-53,-47,-87,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,-76,-77,-78,-79,-80,-81,-63,-26,-30,-24,-102,-46,-88,-84,-92,-96,-95,-97,-98,-99,-100,-64,-23,-45,-44,268,269,-102,-102,-93,-94,-28,-27,-32,-31,-22,]),'pizq':([22,23,24,26,32,38,39,59,60,61,63,66,68,71,72,73,74,75,76,77,78,79,80,82,83,94,98,99,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[59,60,63,73,73,100,73,73,73,73,73,73,73,73,142,73,145,146,147,148,149,150,151,73,73,159,162,163,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'igualT':([24,62,64,96,97,116,119,171,176,177,229,231,],[61,112,117,160,161,173,-51,-49,-52,-87,-50,-88,]),'punto':([24,62,64,70,72,116,119,143,171,176,177,194,229,231,232,],[65,113,65,139,-85,113,-51,-86,-49,-52,-87,-83,-50,-88,-84,]),'cizq':([24,26,32,39,59,60,61,63,64,66,68,71,72,73,82,83,100,112,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,143,146,147,148,149,150,151,154,160,161,162,163,167,169,171,173,176,177,194,196,229,231,232,235,236,250,251,252,],[66,71,71,71,71,71,71,71,118,71,71,71,66,71,71,71,71,71,71,71,66,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,118,71,71,71,71,71,71,71,71,71,71,71,71,71,66,71,118,-87,66,71,118,-88,118,71,71,71,71,71,]),'r_parse':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'r_trunc':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'r_float':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'r_string':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'r_uppercase':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'r_lowercase':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'dospuntos':([26,32,39,59,60,61,63,66,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,95,100,101,108,111,112,117,118,120,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,146,147,148,149,150,151,152,153,154,155,160,161,162,163,164,167,169,170,173,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,207,208,209,210,211,212,213,215,219,222,223,224,225,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,246,250,251,252,256,257,262,263,264,265,266,267,272,],[81,81,81,81,81,81,81,81,81,124,-82,81,-85,81,-102,81,81,-119,-120,-121,-122,-123,-124,-125,124,81,124,124,169,81,81,81,124,124,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,124,81,-86,124,81,81,81,81,81,81,-117,-118,81,215,81,81,81,81,124,81,228,124,81,124,124,-87,124,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,81,-126,124,124,124,124,124,124,124,244,246,250,251,124,124,124,-102,124,-88,-84,124,-92,81,81,-96,-95,-97,-98,-99,-100,260,263,264,81,124,124,272,-102,-102,124,-93,-94,278,]),'resta':([26,32,39,59,60,61,63,66,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,95,100,101,108,111,112,117,118,120,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,146,147,148,149,150,151,152,153,154,160,161,162,163,164,167,169,170,173,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,250,251,252,256,257,263,264,265,266,267,],[82,82,82,82,82,82,82,82,82,126,-82,82,-85,82,-102,82,82,-119,-120,-121,-122,-123,-124,-125,126,82,126,126,126,82,82,82,126,126,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,126,82,-86,126,82,82,82,82,82,82,-117,126,82,82,82,82,82,126,82,82,126,82,126,126,-87,126,-103,-104,-105,-106,-107,-108,126,126,126,126,126,126,126,126,-83,-89,82,-126,126,126,126,126,126,126,126,126,126,126,126,126,-102,126,-88,-84,126,-92,82,82,-96,-95,-97,-98,-99,-100,82,82,82,126,126,-102,-102,126,-93,-94,]),'not':([26,32,36,37,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[83,83,98,99,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'int':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'decimal':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'char':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'string':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'r_false':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'r_true':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'r_nothing':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'pder':([59,60,63,70,72,81,84,85,86,87,88,89,90,106,108,109,114,143,144,152,153,159,164,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,200,201,202,203,204,205,207,208,209,210,211,212,219,221,225,227,231,232,234,237,238,239,240,241,242,256,257,262,265,266,267,270,271,279,280,],[107,110,115,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,166,-75,168,172,-86,198,-117,-118,220,226,-87,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,234,-126,-76,-77,-78,-79,-80,-81,237,238,239,240,241,242,-60,248,253,-74,-88,-84,-92,-96,-95,-97,-98,-99,-100,266,267,-57,277,-93,-94,-62,-61,-59,-58,]),'suma':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[125,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,125,125,125,125,125,125,125,-86,125,-117,125,125,125,125,125,-87,125,-103,-104,-105,-106,-107,-108,125,125,125,125,125,125,125,125,-83,-89,-126,125,125,125,125,125,125,125,125,125,125,125,125,-102,125,-88,-84,125,-92,-96,-95,-97,-98,-99,-100,125,125,-102,-102,125,-93,-94,]),'mul':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[127,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,127,127,127,127,127,127,127,-86,127,-117,127,127,127,127,127,-87,127,127,127,-105,-106,-107,-108,127,127,127,127,127,127,127,127,-83,-89,-126,127,127,127,127,127,127,127,127,127,127,127,127,-102,127,-88,-84,127,-92,-96,-95,-97,-98,-99,-100,127,127,-102,-102,127,-93,-94,]),'div':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[128,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,128,128,128,128,128,128,128,-86,128,-117,128,128,128,128,128,-87,128,128,128,-105,-106,-107,-108,128,128,128,128,128,128,128,128,-83,-89,-126,128,128,128,128,128,128,128,128,128,128,128,128,-102,128,-88,-84,128,-92,-96,-95,-97,-98,-99,-100,128,128,-102,-102,128,-93,-94,]),'elevado':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[129,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,129,129,129,129,129,129,129,-86,129,-117,129,129,129,129,129,-87,129,129,129,129,129,-107,129,129,129,129,129,129,129,129,129,-83,-89,-126,129,129,129,129,129,129,129,129,129,129,129,129,-102,129,-88,-84,129,-92,-96,-95,-97,-98,-99,-100,129,129,-102,-102,129,-93,-94,]),'modulo':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[130,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,130,130,130,130,130,130,130,-86,130,-117,130,130,130,130,130,-87,130,130,130,-105,-106,-107,-108,130,130,130,130,130,130,130,130,-83,-89,-126,130,130,130,130,130,130,130,130,130,130,130,130,-102,130,-88,-84,130,-92,-96,-95,-97,-98,-99,-100,130,130,-102,-102,130,-93,-94,]),'igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[131,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,131,131,131,131,131,131,131,-86,131,-117,131,131,131,131,131,-87,131,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,131,131,-83,-89,-126,131,131,131,131,131,131,131,131,131,131,131,131,-102,131,-88,-84,131,-92,-96,-95,-97,-98,-99,-100,131,131,-102,-102,131,-93,-94,]),'diferente':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[132,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,132,132,132,132,132,132,132,-86,132,-117,132,132,132,132,132,-87,132,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,132,132,-83,-89,-126,132,132,132,132,132,132,132,132,132,132,132,132,-102,132,-88,-84,132,-92,-96,-95,-97,-98,-99,-100,132,132,-102,-102,132,-93,-94,]),'mayor':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[133,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,133,133,133,133,133,133,133,-86,133,-117,133,133,133,133,133,-87,133,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,133,133,-83,-89,-126,133,133,133,133,133,133,133,133,133,133,133,133,-102,133,-88,-84,133,-92,-96,-95,-97,-98,-99,-100,133,133,-102,-102,133,-93,-94,]),'menor':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[134,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,134,134,134,134,134,134,134,-86,134,-117,134,134,134,134,134,-87,134,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,134,134,-83,-89,-126,134,134,134,134,134,134,134,134,134,134,134,134,-102,134,-88,-84,134,-92,-96,-95,-97,-98,-99,-100,134,134,-102,-102,134,-93,-94,]),'mayor_igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[135,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,135,135,135,135,135,135,135,-86,135,-117,135,135,135,135,135,-87,135,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,135,135,-83,-89,-126,135,135,135,135,135,135,135,135,135,135,135,135,-102,135,-88,-84,135,-92,-96,-95,-97,-98,-99,-100,135,135,-102,-102,135,-93,-94,]),'menor_igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[136,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,136,136,136,136,136,136,136,-86,136,-117,136,136,136,136,136,-87,136,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,136,136,-83,-89,-126,136,136,136,136,136,136,136,136,136,136,136,136,-102,136,-88,-84,136,-92,-96,-95,-97,-98,-99,-100,136,136,-102,-102,136,-93,-94,]),'and':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[137,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,137,137,137,137,137,137,137,-86,137,-117,-118,137,137,137,137,-87,137,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,137,-83,-89,-126,137,137,137,137,137,137,137,137,137,137,137,137,-102,137,-88,-84,137,-92,-96,-95,-97,-98,-99,-100,137,137,-102,-102,137,-93,-94,]),'or':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,120,122,141,143,144,152,153,164,170,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,233,234,237,238,239,240,241,242,256,257,263,264,265,266,267,],[138,-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,138,138,138,138,138,138,138,-86,138,-117,-118,138,138,138,138,-87,138,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,138,138,138,138,138,138,138,138,138,138,138,138,-102,138,-88,-84,138,-92,-96,-95,-97,-98,-99,-100,138,138,-102,-102,138,-93,-94,]),'coma':([70,72,81,84,85,86,87,88,89,90,106,108,109,114,140,141,143,152,153,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,219,221,224,227,231,232,233,234,237,238,239,240,241,242,262,266,267,270,271,279,280,],[-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,167,-75,167,167,196,-91,-86,-117,-118,-87,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,167,-126,235,-76,-77,-78,-79,-80,-81,236,-60,249,252,-74,-88,-84,-90,-92,-96,-95,-97,-98,-99,-100,-57,-93,-94,-62,-61,-59,-58,]),'cder':([70,72,81,84,85,86,87,88,89,90,120,140,141,143,152,153,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,198,231,232,233,234,237,238,239,240,241,242,266,267,],[-82,-85,-102,-119,-120,-121,-122,-123,-124,-125,177,195,-91,-86,-117,-118,231,-87,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-83,-89,-126,-88,-84,-90,-92,-96,-95,-97,-98,-99,-100,-93,-94,]),'r_in':([91,],[154,]),'r_int64':([145,146,228,244,260,263,264,278,],[200,200,200,200,200,200,200,200,]),'r_float64':([145,146,228,244,260,263,264,278,],[201,201,201,201,201,201,201,201,]),'r_stringT':([145,146,228,244,260,263,264,278,],[202,202,202,202,202,202,202,202,]),'r_bool':([145,146,228,244,260,263,264,278,],[203,203,203,203,203,203,203,203,]),'r_nothingT':([145,146,228,244,260,263,264,278,],[204,204,204,204,204,204,204,204,]),'r_char':([145,146,228,244,260,263,264,278,],[205,205,205,205,205,205,205,205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,67,69,101,122,213,220,248,],[2,121,123,165,178,243,247,261,]),'instruccion':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[3,40,3,3,3,40,3,40,40,40,3,3,40,40,3,40,]),'print':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'println':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'condicional':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'whilee':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'forr':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'struct':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funtionn':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'llamada':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'BREAKk':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RETURNN':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'CONTINUEE':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'GLOBAL':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LOCAL':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'PUSHH':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'POPP':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LENGHTT':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'if':([0,2,67,69,101,121,122,123,165,178,213,220,243,247,248,261,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'lista_id':([24,64,],[62,116,]),'number_array':([24,72,119,171,194,],[64,143,176,229,232,]),'expresion':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[69,95,101,108,108,111,108,120,122,141,144,152,153,164,170,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,108,207,208,209,210,211,212,213,222,223,224,225,227,179,230,233,256,257,179,179,265,]),'exp_struct':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,117,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,146,147,148,149,150,151,154,160,161,162,163,167,169,173,196,235,236,250,251,252,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'parametro_print':([59,60,63,142,],[106,109,114,197,]),'expresion_exp':([71,],[140,]),'parametros_struct':([92,158,],[156,218,]),'parametro_struct':([92,156,158,218,],[157,217,157,217,]),'tipo':([145,146,228,244,260,263,264,278,],[199,206,255,259,271,274,276,280,]),'parametros_function':([159,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',232),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','grammar.py',236),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_ins','grammar.py',242),
  ('instruccion -> print ptcoma','instruccion',2,'p_instruccion','grammar.py',249),
  ('instruccion -> println ptcoma','instruccion',2,'p_instruccion','grammar.py',250),
  ('instruccion -> asignacion ptcoma','instruccion',2,'p_instruccion','grammar.py',251),
  ('instruccion -> condicional r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',252),
  ('instruccion -> whilee r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',253),
  ('instruccion -> forr r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',254),
  ('instruccion -> struct ptcoma','instruccion',2,'p_instruccion','grammar.py',255),
  ('instruccion -> funtionn r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',256),
  ('instruccion -> llamada ptcoma','instruccion',2,'p_instruccion','grammar.py',257),
  ('instruccion -> array ptcoma','instruccion',2,'p_instruccion','grammar.py',258),
  ('instruccion -> BREAKk ptcoma','instruccion',2,'p_instruccion','grammar.py',259),
  ('instruccion -> RETURNN ptcoma','instruccion',2,'p_instruccion','grammar.py',260),
  ('instruccion -> CONTINUEE ptcoma','instruccion',2,'p_instruccion','grammar.py',261),
  ('instruccion -> GLOBAL ptcoma','instruccion',2,'p_instruccion','grammar.py',262),
  ('instruccion -> LOCAL ptcoma','instruccion',2,'p_instruccion','grammar.py',263),
  ('instruccion -> PUSHH ptcoma','instruccion',2,'p_instruccion','grammar.py',264),
  ('instruccion -> POPP ptcoma','instruccion',2,'p_instruccion','grammar.py',265),
  ('instruccion -> LENGHTT ptcoma','instruccion',2,'p_instruccion','grammar.py',266),
  ('PUSHH -> r_push not pizq expresion coma expresion pder','PUSHH',7,'p_pushh','grammar.py',272),
  ('POPP -> r_pop not pizq expresion pder','POPP',5,'p_popp','grammar.py',275),
  ('LENGHTT -> r_length pizq expresion pder','LENGHTT',4,'p_lengthh','grammar.py',278),
  ('GLOBAL -> r_global id','GLOBAL',2,'p_global','grammar.py',282),
  ('GLOBAL -> r_global id igualT expresion','GLOBAL',4,'p_global_exp','grammar.py',285),
  ('GLOBAL -> r_global id igualT expresion dospuntos dospuntos tipo','GLOBAL',7,'p_global_tipo','grammar.py',288),
  ('GLOBAL -> r_global id igualT expresion dospuntos dospuntos id','GLOBAL',7,'p_global_tipo_id','grammar.py',291),
  ('LOCAL -> r_local id','LOCAL',2,'p_local','grammar.py',294),
  ('LOCAL -> r_local id igualT expresion','LOCAL',4,'p_local_exp','grammar.py',297),
  ('LOCAL -> r_local id igualT expresion dospuntos dospuntos tipo','LOCAL',7,'p_local_tipo','grammar.py',300),
  ('LOCAL -> r_local id igualT expresion dospuntos dospuntos id','LOCAL',7,'p_local_tipo_id','grammar.py',303),
  ('condicional -> if r_else instrucciones','condicional',3,'p_condicional_else','grammar.py',307),
  ('if -> r_if expresion instrucciones','if',3,'p_if','grammar.py',311),
  ('if -> if r_elseif expresion instrucciones','if',4,'p_if_elseif','grammar.py',315),
  ('condicional -> if','condicional',1,'p_condicional','grammar.py',319),
  ('BREAKk -> r_break','BREAKk',1,'p_break','grammar.py',323),
  ('CONTINUEE -> r_continue','CONTINUEE',1,'p_continue','grammar.py',326),
  ('RETURNN -> r_return','RETURNN',1,'p_return','grammar.py',329),
  ('RETURNN -> r_return expresion','RETURNN',2,'p_return_expresion','grammar.py',332),
  ('whilee -> r_while expresion instrucciones','whilee',3,'p_ins_while','grammar.py',343),
  ('forr -> r_for id r_in expresion instrucciones','forr',5,'p_ins_for','grammar.py',347),
  ('asignacion -> id igualT expresion','asignacion',3,'p_asignacion','grammar.py',352),
  ('asignacion -> id igualT expresion dospuntos dospuntos tipo','asignacion',6,'p_asignacionTipo','grammar.py',355),
  ('asignacion -> id igualT expresion dospuntos dospuntos id','asignacion',6,'p_asignacionTipo_id','grammar.py',359),
  ('array -> id number_array lista_id igualT expresion','array',5,'p_asignacion_array_struct','grammar.py',365),
  ('array -> id number_array igualT expresion','array',4,'p_asignacion_array','grammar.py',368),
  ('asignacion -> id lista_id igualT expresion','asignacion',4,'p_asignacion_STRUCT_variable','grammar.py',373),
  ('lista_id -> lista_id punto id','lista_id',3,'p_lista_id','grammar.py',376),
  ('lista_id -> lista_id punto id number_array','lista_id',4,'p_lista_id_array','grammar.py',382),
  ('lista_id -> punto id','lista_id',2,'p_lista_id_u','grammar.py',388),
  ('lista_id -> punto id number_array','lista_id',3,'p_lista_id_u_lista','grammar.py',395),
  ('llamada -> id pizq parametro_print pder','llamada',4,'p_llamada','grammar.py',402),
  ('llamada -> id pizq pder','llamada',3,'p_llamada_Solo','grammar.py',405),
  ('funtionn -> r_function id pizq pder instrucciones','funtionn',5,'p_function','grammar.py',409),
  ('funtionn -> r_function id pizq parametros_function pder instrucciones','funtionn',6,'p_function_parametro','grammar.py',412),
  ('parametros_function -> parametros_function coma id','parametros_function',3,'p_parametros_function','grammar.py',415),
  ('parametros_function -> parametros_function coma id dospuntos dospuntos tipo','parametros_function',6,'p_parametros_function2','grammar.py',421),
  ('parametros_function -> parametros_function coma id dospuntos dospuntos id','parametros_function',6,'p_parametros_function2_id','grammar.py',427),
  ('parametros_function -> id','parametros_function',1,'p_parametros_function_unico','grammar.py',433),
  ('parametros_function -> id dospuntos dospuntos tipo','parametros_function',4,'p_parametros_function_tipo','grammar.py',441),
  ('parametros_function -> id dospuntos dospuntos id','parametros_function',4,'p_parametros_function_tipo_id','grammar.py',447),
  ('struct -> r_struct id parametros_struct r_end','struct',4,'p_struct','grammar.py',456),
  ('struct -> r_mutable r_struct id parametros_struct r_end','struct',5,'p_mutable_struct','grammar.py',459),
  ('parametros_struct -> parametros_struct parametro_struct','parametros_struct',2,'p_parametros_struct','grammar.py',462),
  ('parametros_struct -> parametro_struct','parametros_struct',1,'p_parametros_struct_unico','grammar.py',468),
  ('parametro_struct -> id ptcoma','parametro_struct',2,'p_parametro_struct_nulo','grammar.py',475),
  ('parametro_struct -> id dospuntos dospuntos tipo ptcoma','parametro_struct',5,'p_parametro_struct','grammar.py',482),
  ('parametro_struct -> id dospuntos dospuntos id ptcoma','parametro_struct',5,'p_parametro_struct_id','grammar.py',489),
  ('print -> r_print pizq parametro_print pder','print',4,'p_print','grammar.py',498),
  ('println -> r_println pizq parametro_print pder','println',4,'p_println','grammar.py',502),
  ('print -> r_print pizq pder','print',3,'p_print_v','grammar.py',506),
  ('println -> r_println pizq pder','println',3,'p_println_v','grammar.py',510),
  ('parametro_print -> parametro_print coma expresion','parametro_print',3,'p_parametro_print','grammar.py',514),
  ('parametro_print -> expresion','parametro_print',1,'p_parametro_print_exp','grammar.py',520),
  ('tipo -> r_int64','tipo',1,'p_tipo','grammar.py',527),
  ('tipo -> r_float64','tipo',1,'p_tipo','grammar.py',528),
  ('tipo -> r_stringT','tipo',1,'p_tipo','grammar.py',529),
  ('tipo -> r_bool','tipo',1,'p_tipo','grammar.py',530),
  ('tipo -> r_nothingT','tipo',1,'p_tipo','grammar.py',531),
  ('tipo -> r_char','tipo',1,'p_tipo','grammar.py',532),
  ('expresion -> exp_struct','expresion',1,'p_variable','grammar.py',537),
  ('exp_struct -> exp_struct punto id','exp_struct',3,'p_Expresion_Struct','grammar.py',541),
  ('exp_struct -> exp_struct punto id number_array','exp_struct',4,'p_Expresion_Struct_lista','grammar.py',545),
  ('exp_struct -> id','exp_struct',1,'p_expresion_struct_id','grammar.py',549),
  ('exp_struct -> id number_array','exp_struct',2,'p_expresion_array_id','grammar.py',554),
  ('number_array -> cizq expresion cder','number_array',3,'p_expresion_id_content_unico','grammar.py',559),
  ('number_array -> number_array cizq expresion cder','number_array',4,'p_expresion_id_content','grammar.py',566),
  ('expresion -> cizq expresion_exp cder','expresion',3,'p_expresion_Array','grammar.py',573),
  ('expresion_exp -> expresion_exp coma expresion','expresion_exp',3,'p_coma_expresion','grammar.py',577),
  ('expresion_exp -> expresion','expresion_exp',1,'p_coma_expresion_unico','grammar.py',583),
  ('expresion -> id pizq parametro_print pder','expresion',4,'p_expresion_llamada','grammar.py',596),
  ('expresion -> r_parse pizq tipo coma expresion pder','expresion',6,'p_nativa','grammar.py',599),
  ('expresion -> r_trunc pizq tipo coma expresion pder','expresion',6,'p_nativa','grammar.py',600),
  ('expresion -> r_length pizq expresion pder','expresion',4,'p_length_expresion','grammar.py',605),
  ('expresion -> r_trunc pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',608),
  ('expresion -> r_float pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',609),
  ('expresion -> r_string pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',610),
  ('expresion -> r_uppercase pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',611),
  ('expresion -> r_lowercase pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',612),
  ('expresion -> expresion dospuntos expresion','expresion',3,'p_expresion_rango','grammar.py',616),
  ('expresion -> dospuntos','expresion',1,'p_expresion_rango_Todo','grammar.py',620),
  ('expresion -> expresion suma expresion','expresion',3,'p_expresion','grammar.py',625),
  ('expresion -> expresion resta expresion','expresion',3,'p_expresion','grammar.py',626),
  ('expresion -> expresion mul expresion','expresion',3,'p_expresion','grammar.py',627),
  ('expresion -> expresion div expresion','expresion',3,'p_expresion','grammar.py',628),
  ('expresion -> expresion elevado expresion','expresion',3,'p_expresion','grammar.py',629),
  ('expresion -> expresion modulo expresion','expresion',3,'p_expresion','grammar.py',630),
  ('expresion -> expresion igual expresion','expresion',3,'p_expresion','grammar.py',631),
  ('expresion -> expresion diferente expresion','expresion',3,'p_expresion','grammar.py',632),
  ('expresion -> expresion mayor expresion','expresion',3,'p_expresion','grammar.py',633),
  ('expresion -> expresion menor expresion','expresion',3,'p_expresion','grammar.py',634),
  ('expresion -> expresion mayor_igual expresion','expresion',3,'p_expresion','grammar.py',635),
  ('expresion -> expresion menor_igual expresion','expresion',3,'p_expresion','grammar.py',636),
  ('expresion -> expresion and expresion','expresion',3,'p_expresion','grammar.py',637),
  ('expresion -> expresion or expresion','expresion',3,'p_expresion','grammar.py',638),
  ('expresion -> resta expresion','expresion',2,'p_expresion_unaria','grammar.py',647),
  ('expresion -> not expresion','expresion',2,'p_expresion_unaria','grammar.py',648),
  ('expresion -> int','expresion',1,'p_expresion_primitiva_int','grammar.py',657),
  ('expresion -> decimal','expresion',1,'p_expresion_primitiva_float','grammar.py',661),
  ('expresion -> char','expresion',1,'p_expresion_primitiva_char','grammar.py',665),
  ('expresion -> string','expresion',1,'p_expresion_primitiva_string','grammar.py',669),
  ('expresion -> r_false','expresion',1,'p_expresion_primitiva_bool','grammar.py',673),
  ('expresion -> r_true','expresion',1,'p_expresion_primitiva_bool','grammar.py',674),
  ('expresion -> r_nothing','expresion',1,'p_expresion_primitiva_nothing','grammar.py',681),
  ('expresion -> pizq expresion pder','expresion',3,'p_agrupacion_expresion','grammar.py',690),
]
