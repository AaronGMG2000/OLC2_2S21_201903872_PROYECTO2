
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftorleftandrightnnotleftigualdiferentemayormayor_igualmenormenor_igualleftsumarestaleftmuldivmoduloleftelevadorightUMENOSand cder char cizq coma decimal diferente div dospuntos elevado id igual igualT int lder lizq mayor mayor_igual menor menor_igual modulo mul not or pder pizq ptcoma punto r_Vector r_bool r_break r_char r_continue r_cos r_else r_elseif r_end r_false r_float r_float64 r_for r_function r_global r_if r_in r_int64 r_length r_local r_log r_log10 r_lowercase r_mutable r_nothing r_nothingT r_parse r_pop r_print r_println r_push r_return r_sin r_sqrt r_string r_stringT r_struct r_tan r_true r_trunc r_typeof r_uppercase r_while resta string sumainit   : instruccionesinstrucciones  : instrucciones instruccioninstrucciones  : instruccioninstruccion  : print ptcoma\n                    | println ptcoma\n                    | asignacion ptcoma\n                    | condicional r_end ptcoma\n                    | whilee r_end ptcoma\n                    | forr r_end ptcoma\n                    | struct ptcoma\n                    | funtionn r_end ptcoma\n                    | llamada ptcoma\n                    | array ptcoma\n                    | BREAKk ptcoma\n                    | RETURNN ptcoma\n                    | CONTINUEE ptcoma\n                    | GLOBAL ptcoma\n                    | LOCAL ptcoma\n                    | PUSHH ptcoma\n                    | POPP ptcoma\n                    | LENGHTT ptcomaPUSHH : r_push not pizq expresion coma expresion pderPOPP : r_pop not pizq expresion pderLENGHTT : r_length pizq expresion pderGLOBAL : r_global idGLOBAL : r_global id igualT expresionGLOBAL : r_global id igualT expresion dospuntos dospuntos tipoGLOBAL : r_global id igualT expresion dospuntos dospuntos idLOCAL : r_local idLOCAL : r_local id igualT expresionLOCAL : r_local id igualT expresion dospuntos dospuntos tipoLOCAL : r_local id igualT expresion dospuntos dospuntos idcondicional    : if r_else instruccionesif : r_if expresion instruccionesif : if r_elseif expresion instruccionescondicional    : ifBREAKk : r_breakCONTINUEE : r_continueRETURNN : r_returnRETURNN : r_return expresionwhilee : r_while expresion instruccionesforr : r_for id r_in expresion instruccionesasignacion : id igualT expresionasignacion : id igualT expresion dospuntos dospuntos tipoasignacion : id igualT expresion dospuntos dospuntos idarray : id number_array lista_id igualT expresionarray : id number_array cder igualT expresionasignacion : id lista_id igualT expresionlista_id : lista_id punto idlista_id : lista_id punto id number_arraylista_id : punto idlista_id : punto id number_arrayllamada : id pizq parametro_print pder llamada : id pizq pder funtionn : r_function id pizq pder instruccionesfuntionn : r_function id pizq parametros_function pder instruccionesparametros_function : parametros_function coma idparametros_function : parametros_function coma id dospuntos dospuntos tipoparametros_function : parametros_function coma id dospuntos dospuntos idparametros_function : idparametros_function : id dospuntos dospuntos tipoparametros_function : id dospuntos dospuntos idstruct : r_struct id parametros_struct r_endstruct : r_mutable r_struct id parametros_struct r_endparametros_struct : parametros_struct parametro_structparametros_struct : parametro_structparametro_struct : id ptcomaparametro_struct : id dospuntos dospuntos tipo ptcomaparametro_struct : id dospuntos dospuntos id ptcomaprint  : r_print pizq parametro_print pderprintln  : r_println pizq parametro_print pderprint  : r_print pizq pderprintln  : r_println pizq pderparametro_print  : parametro_print coma expresionparametro_print    : expresiontipo : r_int64\n            | r_float64\n            | r_stringT\n            | r_bool\n            | r_nothingT\n            | r_chartipo : r_Vector lizq tipo ldertipo : r_Vector lizq id lderexpresion : exp_structexp_struct : exp_struct punto idexp_struct : idexp_struct : exp_struct number_array cdernumber_array : cizq expresion number_array : number_array cder cizq expresion expresion : cizq expresion_exp cderexpresion_exp : expresion_exp coma expresionexpresion_exp : expresionexpresion : id pizq parametro_print pderexpresion : r_parse pizq tipo coma expresion pder\n                 | r_trunc pizq tipo coma expresion pder\n                 expresion    : r_trunc pizq expresion pder\n                    | r_float pizq expresion pder\n                    | r_string pizq expresion pder\n                    | r_uppercase pizq expresion pder\n                    | r_lowercase pizq expresion pder\n                    | r_length pizq expresion pderexpresion : expresion dospuntos expresionexpresion : dospuntosexpresion : expresion suma expresion\n                 | expresion resta expresion\n                 | expresion mul expresion\n                 | expresion div expresion\n                 | expresion elevado expresion\n                 | expresion modulo expresion\n                 | expresion igual expresion\n                 | expresion diferente expresion\n                 | expresion mayor expresion\n                 | expresion menor expresion\n                 | expresion mayor_igual expresion\n                 | expresion menor_igual expresion\n                 | expresion and expresion\n                 | expresion or expresionexpresion    :   resta expresion %prec UMENOS\n                    |   not expresion %prec nnotexpresion    : intexpresion    : decimalexpresion    : charexpresion    : stringexpresion    : r_false\n                    | r_trueexpresion : r_nothingexpresion : pizq expresion pder'
    
_lr_action_items = {'r_print':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[22,22,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,22,22,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,22,-7,-8,-9,-11,22,22,22,-118,-119,22,22,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,22,22,-93,-96,-97,-98,-99,-100,-101,22,22,22,22,-94,-95,]),'r_println':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[23,23,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,23,23,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,23,-7,-8,-9,-11,23,23,23,-118,-119,23,23,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,23,23,-93,-96,-97,-98,-99,-100,-101,23,23,23,23,-94,-95,]),'id':([0,2,3,26,27,28,30,32,34,35,39,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,92,93,100,101,102,103,104,105,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,164,166,168,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,213,214,217,218,220,228,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,264,265,267,268,270,273,274,275,284,],[24,24,-3,72,91,92,94,72,96,97,72,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,72,72,72,72,118,72,24,72,24,-84,72,-86,72,-103,72,72,-120,-121,-122,-123,-124,-125,-126,154,157,72,24,-7,-8,-9,-11,72,170,24,24,24,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,192,72,72,72,72,72,72,72,-118,-119,72,154,-66,154,219,72,72,72,72,24,72,72,72,72,72,24,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,72,-127,24,-67,-65,154,24,256,-93,72,260,72,-96,-97,-98,-99,-100,-101,24,262,24,24,266,72,72,72,276,24,279,281,-94,-95,-69,-68,285,]),'r_while':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[26,26,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,26,26,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,26,-7,-8,-9,-11,26,26,26,-118,-119,26,26,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,26,26,-93,-96,-97,-98,-99,-100,-101,26,26,26,26,-94,-95,]),'r_for':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[27,27,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,27,27,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,27,-7,-8,-9,-11,27,27,27,-118,-119,27,27,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,27,27,-93,-96,-97,-98,-99,-100,-101,27,27,27,27,-94,-95,]),'r_struct':([0,2,3,29,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[28,28,-3,93,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,28,28,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,28,-7,-8,-9,-11,28,28,28,-118,-119,28,28,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,28,28,-93,-96,-97,-98,-99,-100,-101,28,28,28,28,-94,-95,]),'r_mutable':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[29,29,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,29,29,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,29,-7,-8,-9,-11,29,29,29,-118,-119,29,29,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,29,29,-93,-96,-97,-98,-99,-100,-101,29,29,29,29,-94,-95,]),'r_function':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[30,30,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,30,30,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,30,-7,-8,-9,-11,30,30,30,-118,-119,30,30,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,30,30,-93,-96,-97,-98,-99,-100,-101,30,30,30,30,-94,-95,]),'r_break':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[31,31,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,31,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,31,-7,-8,-9,-11,31,31,31,-118,-119,31,31,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,31,31,-93,-96,-97,-98,-99,-100,-101,31,31,31,31,-94,-95,]),'r_return':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[32,32,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,32,32,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,32,-7,-8,-9,-11,32,32,32,-118,-119,32,32,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,32,32,-93,-96,-97,-98,-99,-100,-101,32,32,32,32,-94,-95,]),'r_continue':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[33,33,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,33,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,33,-7,-8,-9,-11,33,33,33,-118,-119,33,33,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,33,33,-93,-96,-97,-98,-99,-100,-101,33,33,33,33,-94,-95,]),'r_global':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[34,34,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,34,34,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,34,-7,-8,-9,-11,34,34,34,-118,-119,34,34,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,34,34,-93,-96,-97,-98,-99,-100,-101,34,34,34,34,-94,-95,]),'r_local':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[35,35,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,35,35,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,35,-7,-8,-9,-11,35,35,35,-118,-119,35,35,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,35,35,-93,-96,-97,-98,-99,-100,-101,35,35,35,35,-94,-95,]),'r_push':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[36,36,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,36,36,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,36,-7,-8,-9,-11,36,36,36,-118,-119,36,36,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,36,36,-93,-96,-97,-98,-99,-100,-101,36,36,36,36,-94,-95,]),'r_pop':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[37,37,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,37,37,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,37,-7,-8,-9,-11,37,37,37,-118,-119,37,37,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,37,37,-93,-96,-97,-98,-99,-100,-101,37,37,37,37,-94,-95,]),'r_length':([0,2,3,26,32,39,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,100,101,102,103,104,105,112,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,151,152,153,159,160,161,162,164,166,168,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,213,220,235,236,238,239,240,241,242,243,244,245,249,250,252,253,254,265,270,273,],[38,38,-3,80,80,80,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,80,80,80,80,80,38,80,38,-84,80,-86,80,-103,80,80,-120,-121,-122,-123,-124,-125,-126,80,38,-7,-8,-9,-11,80,38,38,38,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-118,-119,80,80,80,80,80,38,80,80,80,80,80,38,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,80,-127,38,38,-93,80,80,-96,-97,-98,-99,-100,-101,38,38,38,80,80,80,38,-94,-95,]),'r_if':([0,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,120,121,122,151,152,164,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,213,220,235,239,240,241,242,243,244,245,249,250,265,270,273,],[39,39,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,39,39,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,39,-7,-8,-9,-11,39,39,39,-118,-119,39,39,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,39,39,-93,-96,-97,-98,-99,-100,-101,39,39,39,39,-94,-95,]),'$end':([1,2,3,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,],[0,-1,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,]),'r_end':([3,7,8,9,11,25,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,120,122,155,156,164,176,214,217,218,245,249,265,274,275,],[-3,44,45,46,48,-36,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-33,-41,216,-66,-34,-35,-67,-65,247,-42,-55,-56,-69,-68,]),'r_else':([3,25,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,164,176,],[-3,67,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-34,-35,]),'r_elseif':([3,25,40,41,42,43,47,49,50,51,52,53,54,55,56,57,58,102,103,104,105,164,176,],[-3,68,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-34,-35,]),'ptcoma':([4,5,6,10,12,13,14,15,16,17,18,19,20,21,31,32,33,44,45,46,48,70,72,81,84,85,86,87,88,89,90,95,96,97,107,110,111,115,151,152,154,165,167,169,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,199,200,201,202,203,204,216,222,223,226,228,230,231,235,239,240,241,242,243,244,247,255,256,257,262,263,267,268,270,271,272,273,279,280,281,282,283,],[41,42,43,47,49,50,51,52,53,54,55,56,57,58,-37,-39,-38,102,103,104,105,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,-40,-25,-29,-72,-73,-43,-54,-118,-119,214,-70,-71,-48,-53,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,-76,-77,-78,-79,-80,-81,-63,-26,-30,-24,-103,-46,-47,-93,-96,-97,-98,-99,-100,-101,-64,-23,-45,-44,274,275,-103,-103,-94,-82,-83,-95,-28,-27,-32,-31,-22,]),'pizq':([22,23,24,26,32,38,39,59,60,61,63,66,68,71,72,73,74,75,76,77,78,79,80,82,83,94,98,99,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[59,60,63,73,73,100,73,73,73,73,73,73,73,73,142,73,144,145,146,147,148,149,150,73,73,158,161,162,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'igualT':([24,62,70,72,81,84,85,86,87,88,89,90,96,97,116,117,118,119,151,152,170,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,229,232,235,239,240,241,242,243,244,270,273,],[61,112,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,159,160,172,173,-51,-88,-118,-119,-49,-52,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,-50,-89,-93,-96,-97,-98,-99,-100,-101,-94,-95,]),'punto':([24,62,64,70,72,81,84,85,86,87,88,89,90,116,118,119,151,152,170,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,229,232,235,239,240,241,242,243,244,270,273,],[65,113,65,138,-86,-103,-120,-121,-122,-123,-124,-125,-126,113,-51,-88,-118,-119,-49,-52,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,-50,-89,-93,-96,-97,-98,-99,-100,-101,-94,-95,]),'cizq':([24,26,32,39,59,60,61,63,66,68,70,71,72,73,82,83,100,112,117,118,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,170,172,173,174,192,193,195,233,236,238,252,253,254,],[66,71,71,71,71,71,71,71,71,71,66,71,-86,71,71,71,71,71,174,66,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,66,71,71,71,-85,174,71,174,71,71,71,71,71,]),'r_parse':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'r_trunc':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'r_float':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'r_string':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'r_uppercase':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'r_lowercase':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'dospuntos':([26,32,39,59,60,61,63,66,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,95,100,101,108,111,112,119,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,145,146,147,148,149,150,151,152,153,154,159,160,161,162,163,166,168,169,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,207,208,209,210,211,212,213,215,219,222,223,224,225,227,228,230,231,232,234,235,236,238,239,240,241,242,243,244,248,252,253,254,258,261,266,267,268,269,270,273,278,],[81,81,81,81,81,81,81,81,81,123,-84,81,-86,81,-103,81,81,-120,-121,-122,-123,-124,-125,-126,123,81,123,123,168,81,123,123,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,123,81,123,81,81,81,81,81,81,-118,-119,81,215,81,81,81,81,123,81,228,123,81,81,81,123,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,81,-127,123,123,123,123,123,123,123,246,248,252,253,123,123,123,-103,123,123,123,123,-93,81,81,-96,-97,-98,-99,-100,-101,264,267,268,81,123,123,278,-103,-103,123,-94,-95,284,]),'resta':([26,32,39,59,60,61,63,66,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,95,100,101,108,111,112,119,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,143,145,146,147,148,149,150,151,152,153,159,160,161,162,163,166,168,169,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,236,238,239,240,241,242,243,244,252,253,254,258,261,267,268,269,270,273,],[82,82,82,82,82,82,82,82,82,125,-84,82,-86,82,-103,82,82,-120,-121,-122,-123,-124,-125,-126,125,82,125,125,125,82,125,125,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,125,82,125,82,82,82,82,82,82,-118,125,82,82,82,82,82,125,82,82,125,82,82,82,125,-104,-105,-106,-107,-108,-109,125,125,125,125,125,125,125,125,-85,-87,-90,82,-127,125,125,125,125,125,125,125,125,125,125,125,125,-103,125,125,125,125,-93,82,82,-96,-97,-98,-99,-100,-101,82,82,82,125,125,-103,-103,125,-94,-95,]),'not':([26,32,36,37,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[83,83,98,99,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'int':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'decimal':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'char':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'string':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'r_false':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'r_true':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'r_nothing':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'pder':([59,60,63,70,72,81,84,85,86,87,88,89,90,106,108,109,114,143,151,152,158,163,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,199,200,201,202,203,204,207,208,209,210,211,212,219,221,225,227,235,239,240,241,242,243,244,258,261,266,269,270,271,272,273,276,277,285,286,],[107,110,115,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,165,-75,167,171,197,-118,-119,220,226,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,235,-127,-76,-77,-78,-79,-80,-81,239,240,241,242,243,244,-60,250,255,-74,-93,-96,-97,-98,-99,-100,-101,270,273,-57,283,-94,-82,-83,-95,-62,-61,-59,-58,]),'cder':([64,70,72,81,84,85,86,87,88,89,90,119,139,140,141,151,152,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,229,232,234,235,239,240,241,242,243,244,270,273,],[117,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,-88,193,194,-92,-118,-119,233,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,233,-89,-91,-93,-96,-97,-98,-99,-100,-101,-94,-95,]),'suma':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[124,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,124,124,124,124,124,124,124,124,-118,124,124,124,124,-104,-105,-106,-107,-108,-109,124,124,124,124,124,124,124,124,-85,-87,-90,-127,124,124,124,124,124,124,124,124,124,124,124,124,-103,124,124,124,124,-93,-96,-97,-98,-99,-100,-101,124,124,-103,-103,124,-94,-95,]),'mul':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[126,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,126,126,126,126,126,126,126,126,-118,126,126,126,126,126,126,-106,-107,-108,-109,126,126,126,126,126,126,126,126,-85,-87,-90,-127,126,126,126,126,126,126,126,126,126,126,126,126,-103,126,126,126,126,-93,-96,-97,-98,-99,-100,-101,126,126,-103,-103,126,-94,-95,]),'div':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[127,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,127,127,127,127,127,127,127,127,-118,127,127,127,127,127,127,-106,-107,-108,-109,127,127,127,127,127,127,127,127,-85,-87,-90,-127,127,127,127,127,127,127,127,127,127,127,127,127,-103,127,127,127,127,-93,-96,-97,-98,-99,-100,-101,127,127,-103,-103,127,-94,-95,]),'elevado':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[128,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,128,128,128,128,128,128,128,128,-118,128,128,128,128,128,128,128,128,-108,128,128,128,128,128,128,128,128,128,-85,-87,-90,-127,128,128,128,128,128,128,128,128,128,128,128,128,-103,128,128,128,128,-93,-96,-97,-98,-99,-100,-101,128,128,-103,-103,128,-94,-95,]),'modulo':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[129,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,129,129,129,129,129,129,129,129,-118,129,129,129,129,129,129,-106,-107,-108,-109,129,129,129,129,129,129,129,129,-85,-87,-90,-127,129,129,129,129,129,129,129,129,129,129,129,129,-103,129,129,129,129,-93,-96,-97,-98,-99,-100,-101,129,129,-103,-103,129,-94,-95,]),'igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[130,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,130,130,130,130,130,130,130,130,-118,130,130,130,130,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,130,130,-85,-87,-90,-127,130,130,130,130,130,130,130,130,130,130,130,130,-103,130,130,130,130,-93,-96,-97,-98,-99,-100,-101,130,130,-103,-103,130,-94,-95,]),'diferente':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[131,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,131,131,131,131,131,131,131,131,-118,131,131,131,131,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,131,131,-85,-87,-90,-127,131,131,131,131,131,131,131,131,131,131,131,131,-103,131,131,131,131,-93,-96,-97,-98,-99,-100,-101,131,131,-103,-103,131,-94,-95,]),'mayor':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[132,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,132,132,132,132,132,132,132,132,-118,132,132,132,132,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,132,132,-85,-87,-90,-127,132,132,132,132,132,132,132,132,132,132,132,132,-103,132,132,132,132,-93,-96,-97,-98,-99,-100,-101,132,132,-103,-103,132,-94,-95,]),'menor':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[133,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,133,133,133,133,133,133,133,133,-118,133,133,133,133,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,133,133,-85,-87,-90,-127,133,133,133,133,133,133,133,133,133,133,133,133,-103,133,133,133,133,-93,-96,-97,-98,-99,-100,-101,133,133,-103,-103,133,-94,-95,]),'mayor_igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[134,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,134,134,134,134,134,134,134,134,-118,134,134,134,134,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,134,134,-85,-87,-90,-127,134,134,134,134,134,134,134,134,134,134,134,134,-103,134,134,134,134,-93,-96,-97,-98,-99,-100,-101,134,134,-103,-103,134,-94,-95,]),'menor_igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[135,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,135,135,135,135,135,135,135,135,-118,135,135,135,135,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,135,135,-85,-87,-90,-127,135,135,135,135,135,135,135,135,135,135,135,135,-103,135,135,135,135,-93,-96,-97,-98,-99,-100,-101,135,135,-103,-103,135,-94,-95,]),'and':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[136,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,136,136,136,136,136,136,136,136,-118,-119,136,136,136,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,136,-85,-87,-90,-127,136,136,136,136,136,136,136,136,136,136,136,136,-103,136,136,136,136,-93,-96,-97,-98,-99,-100,-101,136,136,-103,-103,136,-94,-95,]),'or':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,207,208,209,210,211,212,213,222,223,224,225,227,228,230,231,232,234,235,239,240,241,242,243,244,258,261,267,268,269,270,273,],[137,-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,137,137,137,137,137,137,137,137,-118,-119,137,137,137,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,-127,137,137,137,137,137,137,137,137,137,137,137,137,-103,137,137,137,137,-93,-96,-97,-98,-99,-100,-101,137,137,-103,-103,137,-94,-95,]),'coma':([70,72,81,84,85,86,87,88,89,90,106,108,109,114,140,141,151,152,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,206,219,221,224,227,234,235,239,240,241,242,243,244,266,270,271,272,273,276,277,285,286,],[-84,-86,-103,-120,-121,-122,-123,-124,-125,-126,166,-75,166,166,195,-92,-118,-119,-102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-85,-87,-90,166,-127,236,-76,-77,-78,-79,-80,-81,238,-60,251,254,-74,-91,-93,-96,-97,-98,-99,-100,-101,-57,-94,-82,-83,-95,-62,-61,-59,-58,]),'r_in':([91,],[153,]),'r_int64':([144,145,228,237,246,264,267,268,284,],[199,199,199,199,199,199,199,199,199,]),'r_float64':([144,145,228,237,246,264,267,268,284,],[200,200,200,200,200,200,200,200,200,]),'r_stringT':([144,145,228,237,246,264,267,268,284,],[201,201,201,201,201,201,201,201,201,]),'r_bool':([144,145,228,237,246,264,267,268,284,],[202,202,202,202,202,202,202,202,202,]),'r_nothingT':([144,145,228,237,246,264,267,268,284,],[203,203,203,203,203,203,203,203,203,]),'r_char':([144,145,228,237,246,264,267,268,284,],[204,204,204,204,204,204,204,204,204,]),'r_Vector':([144,145,228,237,246,264,267,268,284,],[205,205,205,205,205,205,205,205,205,]),'lder':([199,200,201,202,203,204,259,260,271,272,],[-76,-77,-78,-79,-80,-81,271,272,-82,-83,]),'lizq':([205,],[237,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,67,69,101,121,213,220,250,],[2,120,122,164,176,245,249,265,]),'instruccion':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[3,40,3,3,3,40,3,40,40,40,3,3,40,40,3,40,]),'print':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'println':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'condicional':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'whilee':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'forr':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'struct':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funtionn':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'llamada':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'BREAKk':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RETURNN':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'CONTINUEE':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'GLOBAL':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LOCAL':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'PUSHH':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'POPP':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LENGHTT':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'if':([0,2,67,69,101,120,121,122,164,176,213,220,245,249,250,265,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'lista_id':([24,64,],[62,116,]),'number_array':([24,70,118,170,],[64,139,175,229,]),'expresion':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[69,95,101,108,108,111,108,119,121,141,143,151,152,163,169,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,108,207,208,209,210,211,212,213,222,223,224,225,227,177,230,231,232,234,258,261,177,177,269,]),'exp_struct':([26,32,39,59,60,61,63,66,68,71,73,82,83,100,112,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,145,146,147,148,149,150,153,159,160,161,162,166,168,172,173,174,195,236,238,252,253,254,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'parametro_print':([59,60,63,142,],[106,109,114,196,]),'expresion_exp':([71,],[140,]),'parametros_struct':([92,157,],[155,218,]),'parametro_struct':([92,155,157,218,],[156,217,156,217,]),'tipo':([144,145,228,237,246,264,267,268,284,],[198,206,257,259,263,277,280,282,286,]),'parametros_function':([158,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',240),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','grammar.py',244),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_ins','grammar.py',250),
  ('instruccion -> print ptcoma','instruccion',2,'p_instruccion','grammar.py',257),
  ('instruccion -> println ptcoma','instruccion',2,'p_instruccion','grammar.py',258),
  ('instruccion -> asignacion ptcoma','instruccion',2,'p_instruccion','grammar.py',259),
  ('instruccion -> condicional r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',260),
  ('instruccion -> whilee r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',261),
  ('instruccion -> forr r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',262),
  ('instruccion -> struct ptcoma','instruccion',2,'p_instruccion','grammar.py',263),
  ('instruccion -> funtionn r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',264),
  ('instruccion -> llamada ptcoma','instruccion',2,'p_instruccion','grammar.py',265),
  ('instruccion -> array ptcoma','instruccion',2,'p_instruccion','grammar.py',266),
  ('instruccion -> BREAKk ptcoma','instruccion',2,'p_instruccion','grammar.py',267),
  ('instruccion -> RETURNN ptcoma','instruccion',2,'p_instruccion','grammar.py',268),
  ('instruccion -> CONTINUEE ptcoma','instruccion',2,'p_instruccion','grammar.py',269),
  ('instruccion -> GLOBAL ptcoma','instruccion',2,'p_instruccion','grammar.py',270),
  ('instruccion -> LOCAL ptcoma','instruccion',2,'p_instruccion','grammar.py',271),
  ('instruccion -> PUSHH ptcoma','instruccion',2,'p_instruccion','grammar.py',272),
  ('instruccion -> POPP ptcoma','instruccion',2,'p_instruccion','grammar.py',273),
  ('instruccion -> LENGHTT ptcoma','instruccion',2,'p_instruccion','grammar.py',274),
  ('PUSHH -> r_push not pizq expresion coma expresion pder','PUSHH',7,'p_pushh','grammar.py',280),
  ('POPP -> r_pop not pizq expresion pder','POPP',5,'p_popp','grammar.py',283),
  ('LENGHTT -> r_length pizq expresion pder','LENGHTT',4,'p_lengthh','grammar.py',286),
  ('GLOBAL -> r_global id','GLOBAL',2,'p_global','grammar.py',290),
  ('GLOBAL -> r_global id igualT expresion','GLOBAL',4,'p_global_exp','grammar.py',293),
  ('GLOBAL -> r_global id igualT expresion dospuntos dospuntos tipo','GLOBAL',7,'p_global_tipo','grammar.py',296),
  ('GLOBAL -> r_global id igualT expresion dospuntos dospuntos id','GLOBAL',7,'p_global_tipo_id','grammar.py',299),
  ('LOCAL -> r_local id','LOCAL',2,'p_local','grammar.py',302),
  ('LOCAL -> r_local id igualT expresion','LOCAL',4,'p_local_exp','grammar.py',305),
  ('LOCAL -> r_local id igualT expresion dospuntos dospuntos tipo','LOCAL',7,'p_local_tipo','grammar.py',308),
  ('LOCAL -> r_local id igualT expresion dospuntos dospuntos id','LOCAL',7,'p_local_tipo_id','grammar.py',311),
  ('condicional -> if r_else instrucciones','condicional',3,'p_condicional_else','grammar.py',315),
  ('if -> r_if expresion instrucciones','if',3,'p_if','grammar.py',319),
  ('if -> if r_elseif expresion instrucciones','if',4,'p_if_elseif','grammar.py',323),
  ('condicional -> if','condicional',1,'p_condicional','grammar.py',327),
  ('BREAKk -> r_break','BREAKk',1,'p_break','grammar.py',331),
  ('CONTINUEE -> r_continue','CONTINUEE',1,'p_continue','grammar.py',334),
  ('RETURNN -> r_return','RETURNN',1,'p_return','grammar.py',337),
  ('RETURNN -> r_return expresion','RETURNN',2,'p_return_expresion','grammar.py',340),
  ('whilee -> r_while expresion instrucciones','whilee',3,'p_ins_while','grammar.py',351),
  ('forr -> r_for id r_in expresion instrucciones','forr',5,'p_ins_for','grammar.py',355),
  ('asignacion -> id igualT expresion','asignacion',3,'p_asignacion','grammar.py',360),
  ('asignacion -> id igualT expresion dospuntos dospuntos tipo','asignacion',6,'p_asignacionTipo','grammar.py',363),
  ('asignacion -> id igualT expresion dospuntos dospuntos id','asignacion',6,'p_asignacionTipo_id','grammar.py',367),
  ('array -> id number_array lista_id igualT expresion','array',5,'p_asignacion_array_struct','grammar.py',373),
  ('array -> id number_array cder igualT expresion','array',5,'p_asignacion_array','grammar.py',376),
  ('asignacion -> id lista_id igualT expresion','asignacion',4,'p_asignacion_STRUCT_variable','grammar.py',381),
  ('lista_id -> lista_id punto id','lista_id',3,'p_lista_id','grammar.py',384),
  ('lista_id -> lista_id punto id number_array','lista_id',4,'p_lista_id_array','grammar.py',390),
  ('lista_id -> punto id','lista_id',2,'p_lista_id_u','grammar.py',396),
  ('lista_id -> punto id number_array','lista_id',3,'p_lista_id_u_lista','grammar.py',403),
  ('llamada -> id pizq parametro_print pder','llamada',4,'p_llamada','grammar.py',410),
  ('llamada -> id pizq pder','llamada',3,'p_llamada_Solo','grammar.py',413),
  ('funtionn -> r_function id pizq pder instrucciones','funtionn',5,'p_function','grammar.py',417),
  ('funtionn -> r_function id pizq parametros_function pder instrucciones','funtionn',6,'p_function_parametro','grammar.py',420),
  ('parametros_function -> parametros_function coma id','parametros_function',3,'p_parametros_function','grammar.py',423),
  ('parametros_function -> parametros_function coma id dospuntos dospuntos tipo','parametros_function',6,'p_parametros_function2','grammar.py',429),
  ('parametros_function -> parametros_function coma id dospuntos dospuntos id','parametros_function',6,'p_parametros_function2_id','grammar.py',435),
  ('parametros_function -> id','parametros_function',1,'p_parametros_function_unico','grammar.py',441),
  ('parametros_function -> id dospuntos dospuntos tipo','parametros_function',4,'p_parametros_function_tipo','grammar.py',449),
  ('parametros_function -> id dospuntos dospuntos id','parametros_function',4,'p_parametros_function_tipo_id','grammar.py',455),
  ('struct -> r_struct id parametros_struct r_end','struct',4,'p_struct','grammar.py',464),
  ('struct -> r_mutable r_struct id parametros_struct r_end','struct',5,'p_mutable_struct','grammar.py',468),
  ('parametros_struct -> parametros_struct parametro_struct','parametros_struct',2,'p_parametros_struct','grammar.py',472),
  ('parametros_struct -> parametro_struct','parametros_struct',1,'p_parametros_struct_unico','grammar.py',478),
  ('parametro_struct -> id ptcoma','parametro_struct',2,'p_parametro_struct_nulo','grammar.py',485),
  ('parametro_struct -> id dospuntos dospuntos tipo ptcoma','parametro_struct',5,'p_parametro_struct','grammar.py',492),
  ('parametro_struct -> id dospuntos dospuntos id ptcoma','parametro_struct',5,'p_parametro_struct_id','grammar.py',499),
  ('print -> r_print pizq parametro_print pder','print',4,'p_print','grammar.py',508),
  ('println -> r_println pizq parametro_print pder','println',4,'p_println','grammar.py',512),
  ('print -> r_print pizq pder','print',3,'p_print_v','grammar.py',516),
  ('println -> r_println pizq pder','println',3,'p_println_v','grammar.py',520),
  ('parametro_print -> parametro_print coma expresion','parametro_print',3,'p_parametro_print','grammar.py',524),
  ('parametro_print -> expresion','parametro_print',1,'p_parametro_print_exp','grammar.py',530),
  ('tipo -> r_int64','tipo',1,'p_tipo','grammar.py',537),
  ('tipo -> r_float64','tipo',1,'p_tipo','grammar.py',538),
  ('tipo -> r_stringT','tipo',1,'p_tipo','grammar.py',539),
  ('tipo -> r_bool','tipo',1,'p_tipo','grammar.py',540),
  ('tipo -> r_nothingT','tipo',1,'p_tipo','grammar.py',541),
  ('tipo -> r_char','tipo',1,'p_tipo','grammar.py',542),
  ('tipo -> r_Vector lizq tipo lder','tipo',4,'p_vector','grammar.py',547),
  ('tipo -> r_Vector lizq id lder','tipo',4,'p_vector_id','grammar.py',554),
  ('expresion -> exp_struct','expresion',1,'p_variable','grammar.py',562),
  ('exp_struct -> exp_struct punto id','exp_struct',3,'p_Expresion_Struct','grammar.py',566),
  ('exp_struct -> id','exp_struct',1,'p_expresion_struct_id','grammar.py',574),
  ('exp_struct -> exp_struct number_array cder','exp_struct',3,'p_expresion_array_id','grammar.py',579),
  ('number_array -> cizq expresion','number_array',2,'p_expresion_id_content_unico','grammar.py',584),
  ('number_array -> number_array cder cizq expresion','number_array',4,'p_expresion_id_content','grammar.py',591),
  ('expresion -> cizq expresion_exp cder','expresion',3,'p_expresion_Array','grammar.py',598),
  ('expresion_exp -> expresion_exp coma expresion','expresion_exp',3,'p_coma_expresion','grammar.py',602),
  ('expresion_exp -> expresion','expresion_exp',1,'p_coma_expresion_unico','grammar.py',608),
  ('expresion -> id pizq parametro_print pder','expresion',4,'p_expresion_llamada','grammar.py',621),
  ('expresion -> r_parse pizq tipo coma expresion pder','expresion',6,'p_nativa','grammar.py',625),
  ('expresion -> r_trunc pizq tipo coma expresion pder','expresion',6,'p_nativa','grammar.py',626),
  ('expresion -> r_trunc pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',632),
  ('expresion -> r_float pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',633),
  ('expresion -> r_string pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',634),
  ('expresion -> r_uppercase pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',635),
  ('expresion -> r_lowercase pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',636),
  ('expresion -> r_length pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',637),
  ('expresion -> expresion dospuntos expresion','expresion',3,'p_expresion_rango','grammar.py',641),
  ('expresion -> dospuntos','expresion',1,'p_expresion_rango_Todo','grammar.py',645),
  ('expresion -> expresion suma expresion','expresion',3,'p_expresion','grammar.py',650),
  ('expresion -> expresion resta expresion','expresion',3,'p_expresion','grammar.py',651),
  ('expresion -> expresion mul expresion','expresion',3,'p_expresion','grammar.py',652),
  ('expresion -> expresion div expresion','expresion',3,'p_expresion','grammar.py',653),
  ('expresion -> expresion elevado expresion','expresion',3,'p_expresion','grammar.py',654),
  ('expresion -> expresion modulo expresion','expresion',3,'p_expresion','grammar.py',655),
  ('expresion -> expresion igual expresion','expresion',3,'p_expresion','grammar.py',656),
  ('expresion -> expresion diferente expresion','expresion',3,'p_expresion','grammar.py',657),
  ('expresion -> expresion mayor expresion','expresion',3,'p_expresion','grammar.py',658),
  ('expresion -> expresion menor expresion','expresion',3,'p_expresion','grammar.py',659),
  ('expresion -> expresion mayor_igual expresion','expresion',3,'p_expresion','grammar.py',660),
  ('expresion -> expresion menor_igual expresion','expresion',3,'p_expresion','grammar.py',661),
  ('expresion -> expresion and expresion','expresion',3,'p_expresion','grammar.py',662),
  ('expresion -> expresion or expresion','expresion',3,'p_expresion','grammar.py',663),
  ('expresion -> resta expresion','expresion',2,'p_expresion_unaria','grammar.py',672),
  ('expresion -> not expresion','expresion',2,'p_expresion_unaria','grammar.py',673),
  ('expresion -> int','expresion',1,'p_expresion_primitiva_int','grammar.py',682),
  ('expresion -> decimal','expresion',1,'p_expresion_primitiva_float','grammar.py',686),
  ('expresion -> char','expresion',1,'p_expresion_primitiva_char','grammar.py',690),
  ('expresion -> string','expresion',1,'p_expresion_primitiva_string','grammar.py',694),
  ('expresion -> r_false','expresion',1,'p_expresion_primitiva_bool','grammar.py',698),
  ('expresion -> r_true','expresion',1,'p_expresion_primitiva_bool','grammar.py',699),
  ('expresion -> r_nothing','expresion',1,'p_expresion_primitiva_nothing','grammar.py',706),
  ('expresion -> pizq expresion pder','expresion',3,'p_agrupacion_expresion','grammar.py',715),
]
