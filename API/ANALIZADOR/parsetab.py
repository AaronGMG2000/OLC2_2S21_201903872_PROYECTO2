
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftorleftandrightnnotleftigualdiferentemayormayor_igualmenormenor_igualleftsumarestaleftmuldivmoduloleftelevadorightUMENOSand cder char cizq coma decimal diferente div dospuntos elevado id igual igualT int lder lizq mayor mayor_igual menor menor_igual modulo mul not or pder pizq ptcoma punto r_Vector r_bool r_break r_char r_continue r_cos r_else r_elseif r_end r_false r_float r_float64 r_for r_function r_global r_if r_in r_int64 r_length r_local r_log r_log10 r_lowercase r_mutable r_nothing r_nothingT r_parse r_pop r_print r_println r_push r_return r_sin r_sqrt r_string r_stringT r_struct r_tan r_true r_trunc r_typeof r_uppercase r_while resta string sumainit   : instruccionesinstrucciones  : instrucciones instruccioninstrucciones  : instruccioninstruccion  : print ptcoma\n                    | println ptcoma\n                    | asignacion ptcoma\n                    | condicional r_end ptcoma\n                    | whilee r_end ptcoma\n                    | forr r_end ptcoma\n                    | struct ptcoma\n                    | funtionn r_end ptcoma\n                    | llamada ptcoma\n                    | array ptcoma\n                    | BREAKk ptcoma\n                    | RETURNN ptcoma\n                    | CONTINUEE ptcoma\n                    | GLOBAL ptcoma\n                    | LOCAL ptcoma\n                    | PUSHH ptcoma\n                    | POPP ptcoma\n                    | LENGHTT ptcomaPUSHH : r_push not pizq expresion coma expresion pderPOPP : r_pop not pizq expresion pderLENGHTT : r_length pizq expresion pderGLOBAL : r_global idGLOBAL : r_global id igualT expresionGLOBAL : r_global id igualT expresion dospuntos dospuntos tipoGLOBAL : r_global id igualT expresion dospuntos dospuntos idLOCAL : r_local idLOCAL : r_local id igualT expresionLOCAL : r_local id igualT expresion dospuntos dospuntos tipoLOCAL : r_local id igualT expresion dospuntos dospuntos idcondicional    : if r_else instruccionesif : r_if expresion instruccionesif : if r_elseif expresion instruccionescondicional    : ifBREAKk : r_breakCONTINUEE : r_continueRETURNN : r_returnRETURNN : r_return expresionwhilee : r_while expresion instruccionesforr : r_for id r_in expresion instruccionesasignacion : id igualT expresionasignacion : id igualT expresion dospuntos dospuntos tipoasignacion : id igualT expresion dospuntos dospuntos idarray : exp_struct number_array cder igualT expresionasignacion : exp_struct punto id igualT expresionllamada : id pizq parametro_print pder llamada : id pizq pder funtionn : r_function id pizq pder instruccionesfuntionn : r_function id pizq parametros_function pder instruccionesfuntionn : r_function id pizq pder dospuntos dospuntos tipo instrucciones funtionn : r_function id pizq parametros_function pder dospuntos dospuntos tipo instrucciones funtionn : r_function id pizq pder dospuntos dospuntos id instrucciones funtionn : r_function id pizq parametros_function pder dospuntos dospuntos id instrucciones parametros_function : parametros_function coma idparametros_function : parametros_function coma id dospuntos dospuntos tipoparametros_function : idparametros_function : id dospuntos dospuntos tipoparametros_function : id dospuntos dospuntos idparametros_function : parametros_function coma id dospuntos dospuntos idstruct : r_struct id parametros_struct r_endstruct : r_mutable r_struct id parametros_struct r_endparametros_struct : parametros_struct parametro_structparametros_struct : parametro_structparametro_struct : id ptcomaparametro_struct : id dospuntos dospuntos tipo ptcomaparametro_struct : id dospuntos dospuntos id ptcomaprint  : r_print pizq parametro_print pderprintln  : r_println pizq parametro_print pderprint  : r_print pizq pderprintln  : r_println pizq pderparametro_print  : parametro_print coma expresionparametro_print    : expresiontipo : r_int64\n            | r_float64\n            | r_stringT\n            | r_bool\n            | r_nothingT\n            | r_chartipo : r_Vector lizq tipo ldertipo : r_Vector lizq id lderexpresion : exp_structexp_struct : exp_struct punto idexp_struct : idexp_struct : exp_struct number_array cdernumber_array : cizq expresion number_array : number_array cder cizq expresion expresion : cizq expresion_exp cderexpresion_exp : expresion_exp coma expresionexpresion_exp : expresionexpresion : id pizq parametro_print pderexpresion : r_parse pizq tipo coma expresion pder\n                 | r_trunc pizq tipo coma expresion pder\n                 expresion    : r_trunc pizq expresion pder\n                    | r_float pizq expresion pder\n                    | r_string pizq expresion pder\n                    | r_uppercase pizq expresion pder\n                    | r_lowercase pizq expresion pder\n                    | r_length pizq expresion pderexpresion : expresion dospuntos expresionexpresion : dospuntosexpresion : expresion suma expresion\n                 | expresion resta expresion\n                 | expresion mul expresion\n                 | expresion div expresion\n                 | expresion elevado expresion\n                 | expresion modulo expresion\n                 | expresion igual expresion\n                 | expresion diferente expresion\n                 | expresion mayor expresion\n                 | expresion menor expresion\n                 | expresion mayor_igual expresion\n                 | expresion menor_igual expresion\n                 | expresion and expresion\n                 | expresion or expresionexpresion    :   resta expresion %prec UMENOS\n                    |   not expresion %prec nnotexpresion    : intexpresion    : decimalexpresion    : charexpresion    : stringexpresion    : r_false\n                    | r_trueexpresion : r_nothingexpresion : pizq expresion pder'
    
_lr_action_items = {'r_print':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[22,22,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,22,22,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,22,-7,-8,-9,-11,22,22,22,-117,-118,22,22,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,22,22,-92,-95,-96,-97,-98,-99,-100,22,22,22,22,-93,-81,-82,-94,22,22,22,22,22,22,22,22,]),'r_println':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[23,23,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,23,23,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,23,-7,-8,-9,-11,23,23,23,-117,-118,23,23,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,23,23,-92,-95,-96,-97,-98,-99,-100,23,23,23,23,-93,-81,-82,-94,23,23,23,23,23,23,23,23,]),'id':([0,2,3,27,28,29,31,33,35,36,40,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,92,93,100,101,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,139,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,161,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,193,194,195,196,197,198,207,208,211,212,214,222,227,228,229,230,231,232,233,234,235,236,237,238,241,243,244,245,246,247,257,258,259,262,263,265,266,267,268,269,270,273,274,275,282,283,284,285,286,287,288,],[24,24,-3,72,91,92,94,72,96,97,72,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,72,72,72,72,114,72,24,72,24,-83,72,-85,72,-102,72,72,-119,-120,-121,-122,-123,-124,-125,151,154,72,24,-7,-8,-9,-11,24,24,24,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,186,72,72,72,72,72,72,72,-117,-118,72,151,-65,151,213,72,72,72,72,24,72,72,72,72,72,24,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,72,-126,-75,-76,-77,-78,-79,-80,24,-66,-64,151,24,249,-92,72,253,72,-95,-96,-97,-98,-99,-100,24,255,24,24,261,72,72,72,271,273,24,277,279,-93,-81,-82,-94,-68,-67,24,24,284,24,24,24,24,289,24,24,]),'r_while':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[27,27,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,27,27,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,27,-7,-8,-9,-11,27,27,27,-117,-118,27,27,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,27,27,-92,-95,-96,-97,-98,-99,-100,27,27,27,27,-93,-81,-82,-94,27,27,27,27,27,27,27,27,]),'r_for':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[28,28,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,28,28,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,28,-7,-8,-9,-11,28,28,28,-117,-118,28,28,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,28,28,-92,-95,-96,-97,-98,-99,-100,28,28,28,28,-93,-81,-82,-94,28,28,28,28,28,28,28,28,]),'r_struct':([0,2,3,30,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[29,29,-3,93,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,29,29,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,29,-7,-8,-9,-11,29,29,29,-117,-118,29,29,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,29,29,-92,-95,-96,-97,-98,-99,-100,29,29,29,29,-93,-81,-82,-94,29,29,29,29,29,29,29,29,]),'r_mutable':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[30,30,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,30,30,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,30,-7,-8,-9,-11,30,30,30,-117,-118,30,30,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,30,30,-92,-95,-96,-97,-98,-99,-100,30,30,30,30,-93,-81,-82,-94,30,30,30,30,30,30,30,30,]),'r_function':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[31,31,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,31,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,31,-7,-8,-9,-11,31,31,31,-117,-118,31,31,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,31,31,-92,-95,-96,-97,-98,-99,-100,31,31,31,31,-93,-81,-82,-94,31,31,31,31,31,31,31,31,]),'r_break':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[32,32,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,32,32,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,32,-7,-8,-9,-11,32,32,32,-117,-118,32,32,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,32,32,-92,-95,-96,-97,-98,-99,-100,32,32,32,32,-93,-81,-82,-94,32,32,32,32,32,32,32,32,]),'r_return':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[33,33,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,33,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,33,-7,-8,-9,-11,33,33,33,-117,-118,33,33,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,33,33,-92,-95,-96,-97,-98,-99,-100,33,33,33,33,-93,-81,-82,-94,33,33,33,33,33,33,33,33,]),'r_continue':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[34,34,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,34,34,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,34,-7,-8,-9,-11,34,34,34,-117,-118,34,34,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,34,34,-92,-95,-96,-97,-98,-99,-100,34,34,34,34,-93,-81,-82,-94,34,34,34,34,34,34,34,34,]),'r_global':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[35,35,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,35,35,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,35,-7,-8,-9,-11,35,35,35,-117,-118,35,35,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,35,35,-92,-95,-96,-97,-98,-99,-100,35,35,35,35,-93,-81,-82,-94,35,35,35,35,35,35,35,35,]),'r_local':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[36,36,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,36,36,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,36,-7,-8,-9,-11,36,36,36,-117,-118,36,36,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,36,36,-92,-95,-96,-97,-98,-99,-100,36,36,36,36,-93,-81,-82,-94,36,36,36,36,36,36,36,36,]),'r_push':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[37,37,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,37,37,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,37,-7,-8,-9,-11,37,37,37,-117,-118,37,37,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,37,37,-92,-95,-96,-97,-98,-99,-100,37,37,37,37,-93,-81,-82,-94,37,37,37,37,37,37,37,37,]),'r_pop':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[38,38,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,38,38,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,38,-7,-8,-9,-11,38,38,38,-117,-118,38,38,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,38,38,-92,-95,-96,-97,-98,-99,-100,38,38,38,38,-93,-81,-82,-94,38,38,38,38,38,38,38,38,]),'r_length':([0,2,3,27,33,40,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,100,101,102,103,104,105,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,148,149,150,156,157,158,159,161,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,193,194,195,196,197,198,207,214,227,228,230,231,232,233,234,235,236,237,241,243,245,246,247,259,265,266,267,268,273,274,282,283,284,285,287,288,],[39,39,-3,80,80,80,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,80,80,80,80,80,39,80,39,-83,80,-85,80,-102,80,80,-119,-120,-121,-122,-123,-124,-125,80,39,-7,-8,-9,-11,39,39,39,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-117,-118,80,80,80,80,80,39,80,80,80,80,80,39,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,80,-126,-75,-76,-77,-78,-79,-80,39,39,-92,80,80,-95,-96,-97,-98,-99,-100,39,39,39,80,80,80,39,-93,-81,-82,-94,39,39,39,39,39,39,39,39,]),'r_if':([0,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,67,69,70,72,81,84,85,86,87,88,89,90,101,102,103,104,105,117,118,119,148,149,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,207,214,227,231,232,233,234,235,236,237,241,243,259,265,266,267,268,273,274,282,283,284,285,287,288,],[40,40,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,40,40,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,40,-7,-8,-9,-11,40,40,40,-117,-118,40,40,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,40,40,-92,-95,-96,-97,-98,-99,-100,40,40,40,40,-93,-81,-82,-94,40,40,40,40,40,40,40,40,]),'$end':([1,2,3,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,102,103,104,105,],[0,-1,-3,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,]),'r_end':([3,7,8,9,11,26,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,102,103,104,105,117,119,152,153,161,170,208,211,212,237,241,259,269,270,282,283,287,288,],[-3,45,46,47,49,-36,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-33,-41,210,-65,-34,-35,-66,-64,239,-42,-50,-51,-68,-67,-54,-52,-55,-53,]),'r_else':([3,26,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,102,103,104,105,161,170,],[-3,67,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-34,-35,]),'r_elseif':([3,26,41,42,43,44,48,50,51,52,53,54,55,56,57,58,59,102,103,104,105,161,170,],[-3,68,-2,-4,-5,-6,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-7,-8,-9,-11,-34,-35,]),'ptcoma':([4,5,6,10,12,13,14,15,16,17,18,19,20,21,32,33,34,45,46,47,49,70,72,81,84,85,86,87,88,89,90,95,96,97,107,110,111,113,148,149,151,162,164,166,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,195,196,197,198,210,216,217,220,222,223,224,227,231,232,233,234,235,236,239,248,249,250,255,256,262,263,265,266,267,268,277,278,279,280,281,],[42,43,44,48,50,51,52,53,54,55,56,57,58,59,-37,-39,-38,102,103,104,105,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,-40,-25,-29,-71,-72,-43,-49,-117,-118,208,-69,-70,-48,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-75,-76,-77,-78,-79,-80,-62,-26,-30,-24,-102,-47,-46,-92,-95,-96,-97,-98,-99,-100,-63,-23,-45,-44,269,270,-102,-102,-93,-81,-82,-94,-28,-27,-32,-31,-22,]),'pizq':([22,23,24,27,33,39,40,60,61,62,63,66,68,71,72,73,74,75,76,77,78,79,80,82,83,94,98,99,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[60,61,63,73,73,100,73,73,73,73,73,73,73,73,139,73,141,142,143,144,145,146,147,73,73,155,158,159,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'igualT':([24,96,97,114,115,],[62,156,157,167,168,]),'punto':([24,25,70,72,114,115,186,187,],[-85,64,135,-85,-84,-86,-84,-86,]),'cizq':([24,25,27,33,40,60,61,62,63,66,68,70,71,72,73,82,83,100,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,186,187,189,228,230,245,246,247,],[-85,66,71,71,71,71,71,71,71,71,71,66,71,-85,71,71,71,71,-84,169,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-84,169,71,71,71,71,71,71,]),'r_parse':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'r_trunc':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'r_float':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'r_string':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'r_uppercase':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'r_lowercase':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'dospuntos':([27,33,40,60,61,62,63,66,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,95,100,101,108,111,116,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,139,140,142,143,144,145,146,147,148,149,150,151,156,157,158,159,160,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,201,202,203,204,205,206,207,209,213,214,216,217,218,219,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,240,242,243,245,246,247,251,254,260,261,262,263,264,265,268,276,],[81,81,81,81,81,81,81,81,81,120,-83,81,-85,81,-102,81,81,-119,-120,-121,-122,-123,-124,-125,120,81,120,120,165,120,120,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,120,81,120,81,81,81,81,81,81,-117,-118,81,209,81,81,81,81,120,81,222,81,81,81,120,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,81,-126,120,120,120,120,120,120,120,238,240,242,245,246,120,120,120,-102,120,120,120,120,-92,81,81,-95,-96,-97,-98,-99,-100,257,258,260,262,263,81,120,120,275,276,-102,-102,120,-93,-94,286,]),'resta':([27,33,40,60,61,62,63,66,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,90,95,100,101,108,111,116,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,139,140,142,143,144,145,146,147,148,149,150,156,157,158,159,160,163,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,245,246,247,251,254,262,263,264,265,268,],[82,82,82,82,82,82,82,82,82,122,-83,82,-85,82,-102,82,82,-119,-120,-121,-122,-123,-124,-125,122,82,122,122,122,122,122,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,122,82,122,82,82,82,82,82,82,-117,122,82,82,82,82,82,122,82,82,82,82,82,122,-103,-104,-105,-106,-107,-108,122,122,122,122,122,122,122,122,-84,-86,-89,82,-126,122,122,122,122,122,122,122,122,122,122,122,122,-102,122,122,122,122,-92,82,82,-95,-96,-97,-98,-99,-100,82,82,82,122,122,-102,-102,122,-93,-94,]),'not':([27,33,37,38,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[83,83,98,99,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'int':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'decimal':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'char':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'string':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'r_false':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'r_true':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'r_nothing':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'pder':([60,61,63,70,72,81,84,85,86,87,88,89,90,106,108,109,112,140,148,149,155,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,193,194,195,196,197,198,201,202,203,204,205,206,213,215,219,221,227,231,232,233,234,235,236,251,254,261,264,265,266,267,268,271,272,289,290,],[107,110,113,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,162,-74,164,166,191,-117,-118,214,220,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,227,-126,-75,-76,-77,-78,-79,-80,231,232,233,234,235,236,-58,243,248,-73,-92,-95,-96,-97,-98,-99,-100,265,268,-56,281,-93,-81,-82,-94,-60,-59,-61,-57,]),'cder':([65,70,72,81,84,85,86,87,88,89,90,116,136,137,138,148,149,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,225,226,227,231,232,233,234,235,236,265,268,],[115,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,-87,187,188,-91,-117,-118,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,-88,-90,-92,-95,-96,-97,-98,-99,-100,-93,-94,]),'suma':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[121,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,121,121,121,121,121,121,121,121,-117,121,121,121,-103,-104,-105,-106,-107,-108,121,121,121,121,121,121,121,121,-84,-86,-89,-126,121,121,121,121,121,121,121,121,121,121,121,121,-102,121,121,121,121,-92,-95,-96,-97,-98,-99,-100,121,121,-102,-102,121,-93,-94,]),'mul':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[123,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,123,123,123,123,123,123,123,123,-117,123,123,123,123,123,-105,-106,-107,-108,123,123,123,123,123,123,123,123,-84,-86,-89,-126,123,123,123,123,123,123,123,123,123,123,123,123,-102,123,123,123,123,-92,-95,-96,-97,-98,-99,-100,123,123,-102,-102,123,-93,-94,]),'div':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[124,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,124,124,124,124,124,124,124,124,-117,124,124,124,124,124,-105,-106,-107,-108,124,124,124,124,124,124,124,124,-84,-86,-89,-126,124,124,124,124,124,124,124,124,124,124,124,124,-102,124,124,124,124,-92,-95,-96,-97,-98,-99,-100,124,124,-102,-102,124,-93,-94,]),'elevado':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[125,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,125,125,125,125,125,125,125,125,-117,125,125,125,125,125,125,125,-107,125,125,125,125,125,125,125,125,125,-84,-86,-89,-126,125,125,125,125,125,125,125,125,125,125,125,125,-102,125,125,125,125,-92,-95,-96,-97,-98,-99,-100,125,125,-102,-102,125,-93,-94,]),'modulo':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[126,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,126,126,126,126,126,126,126,126,-117,126,126,126,126,126,-105,-106,-107,-108,126,126,126,126,126,126,126,126,-84,-86,-89,-126,126,126,126,126,126,126,126,126,126,126,126,126,-102,126,126,126,126,-92,-95,-96,-97,-98,-99,-100,126,126,-102,-102,126,-93,-94,]),'igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[127,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,127,127,127,127,127,127,127,127,-117,127,127,127,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,127,127,-84,-86,-89,-126,127,127,127,127,127,127,127,127,127,127,127,127,-102,127,127,127,127,-92,-95,-96,-97,-98,-99,-100,127,127,-102,-102,127,-93,-94,]),'diferente':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[128,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,128,128,128,128,128,128,128,128,-117,128,128,128,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,128,128,-84,-86,-89,-126,128,128,128,128,128,128,128,128,128,128,128,128,-102,128,128,128,128,-92,-95,-96,-97,-98,-99,-100,128,128,-102,-102,128,-93,-94,]),'mayor':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[129,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,129,129,129,129,129,129,129,129,-117,129,129,129,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,129,129,-84,-86,-89,-126,129,129,129,129,129,129,129,129,129,129,129,129,-102,129,129,129,129,-92,-95,-96,-97,-98,-99,-100,129,129,-102,-102,129,-93,-94,]),'menor':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[130,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,130,130,130,130,130,130,130,130,-117,130,130,130,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,130,130,-84,-86,-89,-126,130,130,130,130,130,130,130,130,130,130,130,130,-102,130,130,130,130,-92,-95,-96,-97,-98,-99,-100,130,130,-102,-102,130,-93,-94,]),'mayor_igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[131,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,131,131,131,131,131,131,131,131,-117,131,131,131,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,131,131,-84,-86,-89,-126,131,131,131,131,131,131,131,131,131,131,131,131,-102,131,131,131,131,-92,-95,-96,-97,-98,-99,-100,131,131,-102,-102,131,-93,-94,]),'menor_igual':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[132,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,132,132,132,132,132,132,132,132,-117,132,132,132,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,132,132,-84,-86,-89,-126,132,132,132,132,132,132,132,132,132,132,132,132,-102,132,132,132,132,-92,-95,-96,-97,-98,-99,-100,132,132,-102,-102,132,-93,-94,]),'and':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[133,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,133,133,133,133,133,133,133,133,-117,-118,133,133,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,133,-84,-86,-89,-126,133,133,133,133,133,133,133,133,133,133,133,133,-102,133,133,133,133,-92,-95,-96,-97,-98,-99,-100,133,133,-102,-102,133,-93,-94,]),'or':([69,70,72,81,84,85,86,87,88,89,90,95,101,108,111,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,201,202,203,204,205,206,207,216,217,218,219,221,222,223,224,225,226,227,231,232,233,234,235,236,251,254,262,263,264,265,268,],[134,-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,134,134,134,134,134,134,134,134,-117,-118,134,134,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,-126,134,134,134,134,134,134,134,134,134,134,134,134,-102,134,134,134,134,-92,-95,-96,-97,-98,-99,-100,134,134,-102,-102,134,-93,-94,]),'coma':([70,72,81,84,85,86,87,88,89,90,106,108,109,112,137,138,148,149,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,200,213,215,218,221,226,227,231,232,233,234,235,236,261,265,266,267,268,271,272,289,290,],[-83,-85,-102,-119,-120,-121,-122,-123,-124,-125,163,-74,163,163,189,-91,-117,-118,-101,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-84,-86,-89,163,-126,228,-75,-76,-77,-78,-79,-80,230,-58,244,247,-73,-90,-92,-95,-96,-97,-98,-99,-100,-56,-93,-81,-82,-94,-60,-59,-61,-57,]),'r_in':([91,],[150,]),'r_int64':([141,142,222,229,238,257,258,262,263,275,286,],[193,193,193,193,193,193,193,193,193,193,193,]),'r_float64':([141,142,222,229,238,257,258,262,263,275,286,],[194,194,194,194,194,194,194,194,194,194,194,]),'r_stringT':([141,142,222,229,238,257,258,262,263,275,286,],[195,195,195,195,195,195,195,195,195,195,195,]),'r_bool':([141,142,222,229,238,257,258,262,263,275,286,],[196,196,196,196,196,196,196,196,196,196,196,]),'r_nothingT':([141,142,222,229,238,257,258,262,263,275,286,],[197,197,197,197,197,197,197,197,197,197,197,]),'r_char':([141,142,222,229,238,257,258,262,263,275,286,],[198,198,198,198,198,198,198,198,198,198,198,]),'r_Vector':([141,142,222,229,238,257,258,262,263,275,286,],[199,199,199,199,199,199,199,199,199,199,199,]),'lder':([193,194,195,196,197,198,252,253,266,267,],[-75,-76,-77,-78,-79,-80,266,267,-81,-82,]),'lizq':([199,],[229,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,67,69,101,118,207,214,243,273,274,284,285,],[2,117,119,161,170,237,241,259,282,283,287,288,]),'instruccion':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[3,41,3,3,3,41,3,41,41,41,3,3,41,41,3,41,3,3,41,41,3,3,41,41,]),'print':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'println':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'condicional':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'whilee':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'forr':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'struct':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funtionn':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'llamada':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'BREAKk':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RETURNN':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'CONTINUEE':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'GLOBAL':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LOCAL':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'PUSHH':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'POPP':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LENGHTT':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'exp_struct':([0,2,27,33,40,60,61,62,63,66,67,68,69,71,73,82,83,100,101,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,161,163,165,167,168,169,170,189,207,214,228,230,237,241,243,245,246,247,259,273,274,282,283,284,285,287,288,],[25,25,70,70,70,70,70,70,70,70,25,70,25,70,70,70,70,70,25,25,25,25,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,25,70,70,70,70,70,25,70,25,25,70,70,25,25,25,70,70,70,25,25,25,25,25,25,25,25,25,]),'if':([0,2,67,69,101,117,118,119,161,170,207,214,237,241,243,259,273,274,282,283,284,285,287,288,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'number_array':([25,70,],[65,136,]),'expresion':([27,33,40,60,61,62,63,66,68,71,73,82,83,100,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,142,143,144,145,146,147,150,156,157,158,159,163,165,167,168,169,189,228,230,245,246,247,],[69,95,101,108,108,111,108,116,118,138,140,148,149,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,108,201,202,203,204,205,206,207,216,217,218,219,221,171,223,224,225,226,251,254,171,171,264,]),'parametro_print':([60,61,63,139,],[106,109,112,190,]),'expresion_exp':([71,],[137,]),'parametros_struct':([92,154,],[152,212,]),'parametro_struct':([92,152,154,212,],[153,211,153,211,]),'tipo':([141,142,222,229,238,257,258,262,263,275,286,],[192,200,250,252,256,272,274,278,280,285,290,]),'parametros_function':([155,],[215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',245),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','grammar.py',249),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_ins','grammar.py',255),
  ('instruccion -> print ptcoma','instruccion',2,'p_instruccion','grammar.py',262),
  ('instruccion -> println ptcoma','instruccion',2,'p_instruccion','grammar.py',263),
  ('instruccion -> asignacion ptcoma','instruccion',2,'p_instruccion','grammar.py',264),
  ('instruccion -> condicional r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',265),
  ('instruccion -> whilee r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',266),
  ('instruccion -> forr r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',267),
  ('instruccion -> struct ptcoma','instruccion',2,'p_instruccion','grammar.py',268),
  ('instruccion -> funtionn r_end ptcoma','instruccion',3,'p_instruccion','grammar.py',269),
  ('instruccion -> llamada ptcoma','instruccion',2,'p_instruccion','grammar.py',270),
  ('instruccion -> array ptcoma','instruccion',2,'p_instruccion','grammar.py',271),
  ('instruccion -> BREAKk ptcoma','instruccion',2,'p_instruccion','grammar.py',272),
  ('instruccion -> RETURNN ptcoma','instruccion',2,'p_instruccion','grammar.py',273),
  ('instruccion -> CONTINUEE ptcoma','instruccion',2,'p_instruccion','grammar.py',274),
  ('instruccion -> GLOBAL ptcoma','instruccion',2,'p_instruccion','grammar.py',275),
  ('instruccion -> LOCAL ptcoma','instruccion',2,'p_instruccion','grammar.py',276),
  ('instruccion -> PUSHH ptcoma','instruccion',2,'p_instruccion','grammar.py',277),
  ('instruccion -> POPP ptcoma','instruccion',2,'p_instruccion','grammar.py',278),
  ('instruccion -> LENGHTT ptcoma','instruccion',2,'p_instruccion','grammar.py',279),
  ('PUSHH -> r_push not pizq expresion coma expresion pder','PUSHH',7,'p_pushh','grammar.py',285),
  ('POPP -> r_pop not pizq expresion pder','POPP',5,'p_popp','grammar.py',288),
  ('LENGHTT -> r_length pizq expresion pder','LENGHTT',4,'p_lengthh','grammar.py',291),
  ('GLOBAL -> r_global id','GLOBAL',2,'p_global','grammar.py',295),
  ('GLOBAL -> r_global id igualT expresion','GLOBAL',4,'p_global_exp','grammar.py',299),
  ('GLOBAL -> r_global id igualT expresion dospuntos dospuntos tipo','GLOBAL',7,'p_global_tipo','grammar.py',303),
  ('GLOBAL -> r_global id igualT expresion dospuntos dospuntos id','GLOBAL',7,'p_global_tipo_id','grammar.py',307),
  ('LOCAL -> r_local id','LOCAL',2,'p_local','grammar.py',311),
  ('LOCAL -> r_local id igualT expresion','LOCAL',4,'p_local_exp','grammar.py',315),
  ('LOCAL -> r_local id igualT expresion dospuntos dospuntos tipo','LOCAL',7,'p_local_tipo','grammar.py',319),
  ('LOCAL -> r_local id igualT expresion dospuntos dospuntos id','LOCAL',7,'p_local_tipo_id','grammar.py',323),
  ('condicional -> if r_else instrucciones','condicional',3,'p_condicional_else','grammar.py',328),
  ('if -> r_if expresion instrucciones','if',3,'p_if','grammar.py',332),
  ('if -> if r_elseif expresion instrucciones','if',4,'p_if_elseif','grammar.py',336),
  ('condicional -> if','condicional',1,'p_condicional','grammar.py',340),
  ('BREAKk -> r_break','BREAKk',1,'p_break','grammar.py',344),
  ('CONTINUEE -> r_continue','CONTINUEE',1,'p_continue','grammar.py',348),
  ('RETURNN -> r_return','RETURNN',1,'p_return','grammar.py',352),
  ('RETURNN -> r_return expresion','RETURNN',2,'p_return_expresion','grammar.py',356),
  ('whilee -> r_while expresion instrucciones','whilee',3,'p_ins_while','grammar.py',367),
  ('forr -> r_for id r_in expresion instrucciones','forr',5,'p_ins_for','grammar.py',371),
  ('asignacion -> id igualT expresion','asignacion',3,'p_asignacion','grammar.py',376),
  ('asignacion -> id igualT expresion dospuntos dospuntos tipo','asignacion',6,'p_asignacionTipo','grammar.py',379),
  ('asignacion -> id igualT expresion dospuntos dospuntos id','asignacion',6,'p_asignacionTipo_id','grammar.py',383),
  ('array -> exp_struct number_array cder igualT expresion','array',5,'p_asignacion_array','grammar.py',392),
  ('asignacion -> exp_struct punto id igualT expresion','asignacion',5,'p_asignacion_STRUCT_variable','grammar.py',397),
  ('llamada -> id pizq parametro_print pder','llamada',4,'p_llamada','grammar.py',401),
  ('llamada -> id pizq pder','llamada',3,'p_llamada_Solo','grammar.py',404),
  ('funtionn -> r_function id pizq pder instrucciones','funtionn',5,'p_function','grammar.py',409),
  ('funtionn -> r_function id pizq parametros_function pder instrucciones','funtionn',6,'p_function_parametro','grammar.py',413),
  ('funtionn -> r_function id pizq pder dospuntos dospuntos tipo instrucciones','funtionn',8,'p_function_type','grammar.py',417),
  ('funtionn -> r_function id pizq parametros_function pder dospuntos dospuntos tipo instrucciones','funtionn',9,'p_function_parametro_type','grammar.py',421),
  ('funtionn -> r_function id pizq pder dospuntos dospuntos id instrucciones','funtionn',8,'p_function_type_struct','grammar.py',425),
  ('funtionn -> r_function id pizq parametros_function pder dospuntos dospuntos id instrucciones','funtionn',9,'p_function_parametro_type_struct','grammar.py',429),
  ('parametros_function -> parametros_function coma id','parametros_function',3,'p_parametros_function','grammar.py',434),
  ('parametros_function -> parametros_function coma id dospuntos dospuntos tipo','parametros_function',6,'p_parametros_function2','grammar.py',440),
  ('parametros_function -> id','parametros_function',1,'p_parametros_function_unico','grammar.py',446),
  ('parametros_function -> id dospuntos dospuntos tipo','parametros_function',4,'p_parametros_function_tipo','grammar.py',454),
  ('parametros_function -> id dospuntos dospuntos id','parametros_function',4,'p_parametros_function_tipo_id','grammar.py',460),
  ('parametros_function -> parametros_function coma id dospuntos dospuntos id','parametros_function',6,'p_parametros_function2_id','grammar.py',467),
  ('struct -> r_struct id parametros_struct r_end','struct',4,'p_struct','grammar.py',475),
  ('struct -> r_mutable r_struct id parametros_struct r_end','struct',5,'p_mutable_struct','grammar.py',479),
  ('parametros_struct -> parametros_struct parametro_struct','parametros_struct',2,'p_parametros_struct','grammar.py',483),
  ('parametros_struct -> parametro_struct','parametros_struct',1,'p_parametros_struct_unico','grammar.py',489),
  ('parametro_struct -> id ptcoma','parametro_struct',2,'p_parametro_struct_nulo','grammar.py',496),
  ('parametro_struct -> id dospuntos dospuntos tipo ptcoma','parametro_struct',5,'p_parametro_struct','grammar.py',503),
  ('parametro_struct -> id dospuntos dospuntos id ptcoma','parametro_struct',5,'p_parametro_struct_id','grammar.py',510),
  ('print -> r_print pizq parametro_print pder','print',4,'p_print','grammar.py',519),
  ('println -> r_println pizq parametro_print pder','println',4,'p_println','grammar.py',523),
  ('print -> r_print pizq pder','print',3,'p_print_v','grammar.py',527),
  ('println -> r_println pizq pder','println',3,'p_println_v','grammar.py',531),
  ('parametro_print -> parametro_print coma expresion','parametro_print',3,'p_parametro_print','grammar.py',535),
  ('parametro_print -> expresion','parametro_print',1,'p_parametro_print_exp','grammar.py',541),
  ('tipo -> r_int64','tipo',1,'p_tipo','grammar.py',548),
  ('tipo -> r_float64','tipo',1,'p_tipo','grammar.py',549),
  ('tipo -> r_stringT','tipo',1,'p_tipo','grammar.py',550),
  ('tipo -> r_bool','tipo',1,'p_tipo','grammar.py',551),
  ('tipo -> r_nothingT','tipo',1,'p_tipo','grammar.py',552),
  ('tipo -> r_char','tipo',1,'p_tipo','grammar.py',553),
  ('tipo -> r_Vector lizq tipo lder','tipo',4,'p_vector','grammar.py',558),
  ('tipo -> r_Vector lizq id lder','tipo',4,'p_vector_id','grammar.py',565),
  ('expresion -> exp_struct','expresion',1,'p_variable','grammar.py',573),
  ('exp_struct -> exp_struct punto id','exp_struct',3,'p_Expresion_Struct','grammar.py',577),
  ('exp_struct -> id','exp_struct',1,'p_expresion_struct_id','grammar.py',585),
  ('exp_struct -> exp_struct number_array cder','exp_struct',3,'p_expresion_array_id','grammar.py',590),
  ('number_array -> cizq expresion','number_array',2,'p_expresion_id_content_unico','grammar.py',595),
  ('number_array -> number_array cder cizq expresion','number_array',4,'p_expresion_id_content','grammar.py',602),
  ('expresion -> cizq expresion_exp cder','expresion',3,'p_expresion_Array','grammar.py',609),
  ('expresion_exp -> expresion_exp coma expresion','expresion_exp',3,'p_coma_expresion','grammar.py',613),
  ('expresion_exp -> expresion','expresion_exp',1,'p_coma_expresion_unico','grammar.py',619),
  ('expresion -> id pizq parametro_print pder','expresion',4,'p_expresion_llamada','grammar.py',632),
  ('expresion -> r_parse pizq tipo coma expresion pder','expresion',6,'p_nativa','grammar.py',636),
  ('expresion -> r_trunc pizq tipo coma expresion pder','expresion',6,'p_nativa','grammar.py',637),
  ('expresion -> r_trunc pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',643),
  ('expresion -> r_float pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',644),
  ('expresion -> r_string pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',645),
  ('expresion -> r_uppercase pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',646),
  ('expresion -> r_lowercase pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',647),
  ('expresion -> r_length pizq expresion pder','expresion',4,'p_nativa_individual','grammar.py',648),
  ('expresion -> expresion dospuntos expresion','expresion',3,'p_expresion_rango','grammar.py',652),
  ('expresion -> dospuntos','expresion',1,'p_expresion_rango_Todo','grammar.py',656),
  ('expresion -> expresion suma expresion','expresion',3,'p_expresion','grammar.py',661),
  ('expresion -> expresion resta expresion','expresion',3,'p_expresion','grammar.py',662),
  ('expresion -> expresion mul expresion','expresion',3,'p_expresion','grammar.py',663),
  ('expresion -> expresion div expresion','expresion',3,'p_expresion','grammar.py',664),
  ('expresion -> expresion elevado expresion','expresion',3,'p_expresion','grammar.py',665),
  ('expresion -> expresion modulo expresion','expresion',3,'p_expresion','grammar.py',666),
  ('expresion -> expresion igual expresion','expresion',3,'p_expresion','grammar.py',667),
  ('expresion -> expresion diferente expresion','expresion',3,'p_expresion','grammar.py',668),
  ('expresion -> expresion mayor expresion','expresion',3,'p_expresion','grammar.py',669),
  ('expresion -> expresion menor expresion','expresion',3,'p_expresion','grammar.py',670),
  ('expresion -> expresion mayor_igual expresion','expresion',3,'p_expresion','grammar.py',671),
  ('expresion -> expresion menor_igual expresion','expresion',3,'p_expresion','grammar.py',672),
  ('expresion -> expresion and expresion','expresion',3,'p_expresion','grammar.py',673),
  ('expresion -> expresion or expresion','expresion',3,'p_expresion','grammar.py',674),
  ('expresion -> resta expresion','expresion',2,'p_expresion_unaria','grammar.py',683),
  ('expresion -> not expresion','expresion',2,'p_expresion_unaria','grammar.py',684),
  ('expresion -> int','expresion',1,'p_expresion_primitiva_int','grammar.py',693),
  ('expresion -> decimal','expresion',1,'p_expresion_primitiva_float','grammar.py',697),
  ('expresion -> char','expresion',1,'p_expresion_primitiva_char','grammar.py',701),
  ('expresion -> string','expresion',1,'p_expresion_primitiva_string','grammar.py',705),
  ('expresion -> r_false','expresion',1,'p_expresion_primitiva_bool','grammar.py',709),
  ('expresion -> r_true','expresion',1,'p_expresion_primitiva_bool','grammar.py',710),
  ('expresion -> r_nothing','expresion',1,'p_expresion_primitiva_nothing','grammar.py',717),
  ('expresion -> pizq expresion pder','expresion',3,'p_agrupacion_expresion','grammar.py',726),
]
